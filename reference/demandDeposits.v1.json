{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "ffir1jhtmt54j"
  },
  "info": {
    "title": "demandDeposits",
    "version": "1.0",
    "description": "API para la gestion y administracion de cuentas de ahorros y monetarias del sistemas Cobis.",
    "contact": {
      "name": "Rony Reyes",
      "email": "rony.reyes@bam.com.gt"
    },
    "license": {
      "name": "BAM"
    },
    "x-tags": {
      "bam:application-id": "rdct_api_composicion",
      "bam:component": "servicios-core",
      "bam:layer": "composicion",
      "bam:tecnical-domain": "demand deposits",
      "bam:sox-compliance": "si",
      "bam:billing-mode": "transversal",
      "bam:cost-center": "0",
      "bam:cost-center-project": "334",
      "bam:impact": "BIA",
      "bam:creator-user": "Rony Reyes - rony.reyes",
      "bam:creator-email": "rony.reyes@bam.com.gt"
    }
  },
  "servers": [
    {
      "url": "https://r52utjo1gj.execute-api.us-east-1.amazonaws.com/prod/v1",
      "description": "ComponentesCompartidosDev"
    }
  ],
  "paths": {
    "/demandDeposits/{accountType}/{accountNumber}": {
      "get": {
        "summary": "Cuentas monetarias y ahorros",
        "responses": {
          "200": {
            "description": "Consulta exitosa de cuenta",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "Id": {
                                  "$ref": "../Models/Deposits/accountId.v1.yaml"
                                },
                                "number": {
                                  "$ref": "../Models/Products/AccountNumber.v1.yaml"
                                },
                                "name": {
                                  "$ref": "../Models/Products/AccountName.v1.yaml"
                                },
                                "currency": {
                                  "$ref": "../Models/Products/Currency.v1.yaml"
                                },
                                "productType": {
                                  "$ref": "../Models/Products/ProductType.v1.yaml"
                                },
                                "productClass": {
                                  "$ref": "../Models/Products/ProductClass.v1.yaml"
                                },
                                "status": {
                                  "$ref": "../Models/Products/Status.v1.yaml"
                                },
                                "branch": {
                                  "$ref": "../Models/Cobis/Branch.v1.yaml"
                                },
                                "company": {
                                  "$ref": "../Models/Cobis/Company.v1.yaml"
                                },
                                "idCobis": {
                                  "$ref": "../Models/Customer/idCobis.v1.yaml"
                                },
                                "officer": {
                                  "$ref": "../Models/Customer/Officer.v1.yaml"
                                },
                                "originationDate": {
                                  "$ref": "../Models/Deposits/OriginationDate.v1.yaml"
                                },
                                "lastUpdateDate": {
                                  "$ref": "../Models/Deposits/LastUpdateDate.v1.yaml"
                                },
                                "lastActivityDate": {
                                  "$ref": "../Models/Deposits/LastActivityDate.v1.yaml"
                                },
                                "lastCapitalizationDate": {
                                  "$ref": "../Models/Deposits/LastCapitalizationDate.v1.yaml"
                                },
                                "nextCapitalizationDate": {
                                  "$ref": "../Models/Deposits/NextCapitalizationDate.v1.yaml"
                                },
                                "declaredCheck": {
                                  "$ref": "../Models/Deposits/DeclaredCheck.v1.yaml"
                                },
                                "iban": {
                                  "$ref": "../Models/Deposits/IBAN.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "DepositsRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "account": {
                          "Id": 53365,
                          "number": "3645770022",
                          "name": "Juan David Sandoval Cardona",
                          "currency": {
                            "code": 0,
                            "description": "QUETZAL"
                          },
                          "productType": {
                            "code": 4,
                            "description": "CUENTA DE AHORROS"
                          },
                          "productClass": {
                            "code": "11",
                            "description": "AHORRO PLUS INT. S/M"
                          },
                          "status": {
                            "code": "A",
                            "description": "ACTIVA"
                          },
                          "branch": {
                            "code": 1,
                            "name": "FUNDACION"
                          },
                          "company": {
                            "code": 1,
                            "name": "BANCO AGROMERCANTIL DE GUATEMALA, S.A."
                          },
                          "idCobis": 879937,
                          "officer": {
                            "code": 3546,
                            "clerk": {
                              "code": 7684,
                              "name": "Jose Adolfo Perez Marroquin"
                            },
                            "segment": {
                              "code": "3",
                              "description": "Potencial"
                            }
                          },
                          "originationDate": "2019-02-10",
                          "lastUpdateDate": "2019-08-24",
                          "lastActivityDate": "2021-02-10",
                          "lastCapitalizationDate": "2021-02-10",
                          "nextCapitalizationDate": "2022-02-10",
                          "declaredCheck": "N",
                          "iban": "GT02AGRO01010000003550000258"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cuenta no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "No se encontro el numero de cuenta"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-deposits-http",
        "description": "Consulta de información basica de cuentas monetarias o ahorros",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "tags": [
          "Consulta"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/AccountType"
        },
        {
          "$ref": "#/components/parameters/AccountNumber"
        }
      ]
    },
    "/demandDeposits/{accountType}/{accountNumber}/balance": {
      "parameters": [
        {
          "$ref": "#/components/parameters/AccountType"
        },
        {
          "$ref": "#/components/parameters/AccountNumber"
        }
      ],
      "get": {
        "summary": "Consulta de Saldos",
        "tags": [
          "Consulta"
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "balance": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "../Models/Deposits/accountId.v1.yaml"
                                },
                                "name": {
                                  "$ref": "../Models/Products/AccountName.v1.yaml"
                                },
                                "type": {
                                  "$ref": "../Models/Products/ProductType.v1.yaml"
                                },
                                "productClass": {
                                  "$ref": "../Models/Products/ProductClass.v1.yaml"
                                },
                                "status": {
                                  "$ref": "../Models/Products/Status.v1.yaml"
                                },
                                "currency": {
                                  "$ref": "../Models/Products/Currency.v1.yaml"
                                },
                                "availableBalance": {
                                  "$ref": "../Models/Deposits/availableBalance.v1.yaml"
                                },
                                "accountingBalance": {
                                  "$ref": "../Models/Deposits/accountingBalance.v1.yaml"
                                },
                                "localResevesBalance": {
                                  "$ref": "../Models/Deposits/LocalReservesBalance.v1.yaml"
                                },
                                "foreignReservesBalance": {
                                  "$ref": "../Models/Deposits/ForeignReservesBalance.v1.yaml"
                                },
                                "frozenBalance": {
                                  "$ref": "../Models/Deposits/FrozenBalance.v1.yaml"
                                },
                                "authorizedOverdraft": {
                                  "$ref": "../Models/Deposits/AuthorizedOverdraft.v1.yaml"
                                },
                                "overdraftDays": {
                                  "$ref": "../Models/Deposits/OverdraftDays.v1.yaml"
                                },
                                "overdraftBalance": {
                                  "$ref": "../Models/Deposits/OverdraftBalance.v1.yaml"
                                },
                                "embargoedBalance": {
                                  "$ref": "../Models/Deposits/EmbargoedBalance.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SavingAccountBalanceRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "balance": {
                          "id": 53365,
                          "name": "Juan David Sandoval Cardona",
                          "type": {
                            "code": 4,
                            "description": "CUENTA DE AHORROS"
                          },
                          "productClass": {
                            "code": "11",
                            "description": "AHORRO PLUS INT. S/M"
                          },
                          "status": {
                            "code": "A",
                            "description": "ACTIVA"
                          },
                          "currency": {
                            "code": 0,
                            "description": "QUETZAL"
                          },
                          "availableBalance": 3540,
                          "accountingBalance": 5040,
                          "localResevesBalance": 1200,
                          "foreignReservesBalance": 350,
                          "frozenBalance": 0,
                          "authorizedOverdraft": 0,
                          "overdraftDays": 0,
                          "overdraftBalance": 9.99,
                          "embargoedBalance": 9.99
                        }
                      }
                    }
                  },
                  "CheckingAccountRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "balance": {
                          "id": 53365,
                          "name": "Juan David Sandoval Cardona",
                          "type": {
                            "code": 3,
                            "description": "CUENTA CORRIENTE"
                          },
                          "productClass": {
                            "code": "2",
                            "description": "MONETARIOS CON INTERESES"
                          },
                          "status": {
                            "code": "A",
                            "description": "ACTIVA"
                          },
                          "currency": {
                            "code": 0,
                            "description": "QUETZAL"
                          },
                          "availableBalance": 2540,
                          "accountingBalance": 4590,
                          "localResevesBalance": 1200,
                          "foreignReservesBalance": 350,
                          "frozenBalance": 1000,
                          "authorizedOverdraft": 500,
                          "overdraftDays": 3,
                          "overdraftBalance": 9.99,
                          "embargoedBalance": 9.99
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cuenta no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "No se encontro el numero de cuenta"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-deposits-balance-http",
        "description": "Consulta de saldos de cuentas monetarios o de ahorros por tipo y numero de cuenta",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "x-api-documentation": "https://bam.stoplight.io/docs/rdct-api-composicion/11401cc318b39-consulta-de-saldos"
      }
    },
    "/demandDeposits/{accountType}/{accountNumber}/movements": {
      "parameters": [
        {
          "$ref": "#/components/parameters/AccountType"
        },
        {
          "$ref": "#/components/parameters/AccountNumber"
        }
      ],
      "post": {
        "summary": "Consulta de movimientos por números de referencia",
        "tags": [
          "Consulta"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "movements": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sequential": {
                                    "$ref": "../Models/Transactions/Secuential.v1.yaml"
                                  },
                                  "sequentialAlternate": {
                                    "$ref": "../Models/Transactions/SequentialAlternate.v1.yaml"
                                  },
                                  "date": {
                                    "$ref": "../Models/Transactions/TransactionDate.v1.yaml"
                                  },
                                  "time": {
                                    "$ref": "../Models/Transactions/TransactionTime.v1.yaml"
                                  },
                                  "datetime": {
                                    "$ref": "../Models/Transactions/TransactionDatetime.v1.yaml"
                                  },
                                  "reference": {
                                    "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                  },
                                  "transactionDescription": {
                                    "$ref": "../Models/Transactions/TransactionDescription.v1.yaml"
                                  },
                                  "transferDescription": {
                                    "$ref": "../Models/Transactions/TransferDescription.v1.yaml"
                                  },
                                  "branch": {
                                    "$ref": "../Models/Cobis/Branch.v1.yaml"
                                  },
                                  "transactionType": {
                                    "$ref": "../Models/Transactions/TransactionType.v1.yaml"
                                  },
                                  "cause": {
                                    "$ref": "../Models/Transactions/Cause.v1.yaml"
                                  },
                                  "check": {
                                    "$ref": "../Models/Transactions/CheckNumber.v1.yaml"
                                  },
                                  "cashAmount": {
                                    "$ref": "../Models/Transactions/CashAmount.v1.yaml"
                                  },
                                  "ownCheckAmount": {
                                    "$ref": "../Models/Transactions/OwnCheckAmount.v1.yaml"
                                  },
                                  "localCheckAmount": {
                                    "$ref": "../Models/Transactions/LocalCheckAmount.v1.yaml"
                                  },
                                  "foreignCheckAmount": {
                                    "$ref": "../Models/Transactions/ForeignCheckAmount.v1.yaml"
                                  },
                                  "creditAmount": {
                                    "$ref": "../Models/Transactions/CreditAmount.v1.yaml"
                                  },
                                  "debitAmount": {
                                    "$ref": "../Models/Transactions/DebitAmount.v1.yaml"
                                  },
                                  "availableAmount": {
                                    "$ref": "../Models/Transactions/AvailableAmount.v1.yaml"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "MovementsRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "movements": [
                          {
                            "sequential": 424722004,
                            "sequentialAlternate": 10,
                            "date": "2021-01-15",
                            "time": "13:57:29.52Z",
                            "datetime": "2021-01-15T13:57:29.688Z",
                            "reference": "1064052816512",
                            "transactionDescription": "ND 160: TRANSFERENCIAS",
                            "transferDescription": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE",
                            "branch": {
                              "code": 259,
                              "name": "BANCA VIRTUAL"
                            },
                            "transactionType": {
                              "code": 50,
                              "description": "NOTA DE DEBITO COMUN"
                            },
                            "cause": {
                              "code": 156,
                              "description": "TRANSFERENCIAS EN BAMNET"
                            },
                            "check": 0,
                            "cashAmount": 30,
                            "ownCheckAmount": 0,
                            "localCheckAmount": 0,
                            "foreignCheckAmount": 0,
                            "creditAmount": 0,
                            "debitAmount": 30,
                            "availableAmount": 580
                          },
                          {
                            "sequential": 424722647,
                            "sequentialAlternate": 10,
                            "date": "2021-01-15",
                            "time": "13:57:29.52Z",
                            "datetime": "2021-01-15T13:59:15.688Z",
                            "reference": "1064052816867",
                            "transactionDescription": "ND 160: TRANSFERENCIAS",
                            "transferDescription": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE",
                            "branch": {
                              "code": 259,
                              "name": "BANCA VIRTUAL"
                            },
                            "transactionType": {
                              "code": 50,
                              "description": "NOTA DE DEBITO COMUN"
                            },
                            "cause": {
                              "code": 156,
                              "description": "TRANSFERENCIAS EN BAMNET"
                            },
                            "check": 0,
                            "cashAmount": 200,
                            "ownCheckAmount": 0,
                            "localCheckAmount": 0,
                            "foreignCheckAmount": 0,
                            "creditAmount": 0,
                            "debitAmount": 200,
                            "totalAmount": 380
                          },
                          {
                            "sequential": 424723987,
                            "sequentialAlternate": 10,
                            "date": "2021-01-15",
                            "time": "13:57:29.52Z",
                            "datetime": "2021-01-15T14:05:29.688Z",
                            "reference": "1064052817354",
                            "transactionDescription": "ND 160: TRANSFERENCIAS",
                            "transferDescription": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE",
                            "branch": {
                              "code": 259,
                              "name": "BANCA VIRTUAL"
                            },
                            "transactionType": {
                              "code": 50,
                              "description": "NOTA DE DEBITO COMUN"
                            },
                            "cause": {
                              "code": 156,
                              "description": "TRANSFERENCIAS EN BAMNET"
                            },
                            "check": 0,
                            "cashAmount": 75,
                            "ownCheckAmount": 0,
                            "localCheckAmount": 0,
                            "foreignCheckAmount": 0,
                            "creditAmount": 0,
                            "debitAmount": 75,
                            "totalAmount": 305
                          }
                        ],
                        "totalResults": 3,
                        "prevLimit": 10,
                        "prevOffset": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cuenta o movimientos no encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "No se encontro el numero de cuenta"
                    }
                  },
                  "MovementsNotFound": {
                    "value": {
                      "code": "MOVEMENTS_NOT_FOUND",
                      "message": "No se encontraron movimientos"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-deposits-movements-by-ref-http",
        "description": "Consulta de movimientos de una cuenta monetaria o de ahorros por el numero de cuenta y un listado de operaciones por número de referencia",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operationList": {
                    "type": "array",
                    "items": {
                      "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                    }
                  }
                },
                "required": [
                  "operationList"
                ]
              },
              "examples": {
                "BodyRqExample": {
                  "value": {
                    "operationList": [
                      "1064052816512",
                      "1085082312569"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Consulta de movimientos por rango de fecha",
        "tags": [
          "Consulta"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "movements": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sequential": {
                                    "$ref": "../Models/Transactions/Secuential.v1.yaml"
                                  },
                                  "sequentialAlternate": {
                                    "$ref": "../Models/Transactions/SequentialAlternate.v1.yaml"
                                  },
                                  "date": {
                                    "$ref": "../Models/Transactions/TransactionDate.v1.yaml"
                                  },
                                  "time": {
                                    "$ref": "../Models/Transactions/TransactionTime.v1.yaml"
                                  },
                                  "datetime": {
                                    "$ref": "../Models/Transactions/TransactionDatetime.v1.yaml"
                                  },
                                  "reference": {
                                    "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                  },
                                  "transactionDescription": {
                                    "$ref": "../Models/Transactions/TransactionDescription.v1.yaml"
                                  },
                                  "transferDescription": {
                                    "$ref": "../Models/Transactions/TransferDescription.v1.yaml"
                                  },
                                  "branch": {
                                    "$ref": "../Models/Cobis/Branch.v1.yaml"
                                  },
                                  "transactionType": {
                                    "$ref": "../Models/Transactions/TransactionType.v1.yaml"
                                  },
                                  "cause": {
                                    "$ref": "../Models/Transactions/Cause.v1.yaml"
                                  },
                                  "check": {
                                    "$ref": "../Models/Transactions/CheckNumber.v1.yaml"
                                  },
                                  "cashAmount": {
                                    "$ref": "../Models/Transactions/CashAmount.v1.yaml"
                                  },
                                  "ownCheckAmount": {
                                    "$ref": "../Models/Transactions/OwnCheckAmount.v1.yaml"
                                  },
                                  "localCheckAmount": {
                                    "$ref": "../Models/Transactions/LocalCheckAmount.v1.yaml"
                                  },
                                  "foreignCheckAmount": {
                                    "$ref": "../Models/Transactions/ForeignCheckAmount.v1.yaml"
                                  },
                                  "creditAmount": {
                                    "$ref": "../Models/Transactions/CreditAmount.v1.yaml"
                                  },
                                  "debitAmount": {
                                    "$ref": "../Models/Transactions/DebitAmount.v1.yaml"
                                  },
                                  "availableAmount": {
                                    "$ref": "../Models/Transactions/AvailableAmount.v1.yaml"
                                  }
                                }
                              }
                            },
                            "totalResults": {
                              "$ref": "../Models/Pagination/TotalResults.v1.yaml"
                            },
                            "prevLimit": {
                              "$ref": "../Models/Pagination/PrevLimit.v1.yaml"
                            },
                            "prevOffset": {
                              "$ref": "../Models/Pagination/PrevOffset.v1.yaml"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "MovementsRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "movements": [
                          {
                            "sequential": 424722004,
                            "sequentialAlternate": 10,
                            "date": "2021-01-15",
                            "time": "13:57:29.52Z",
                            "datetime": "2021-01-15T13:57:29.688Z",
                            "reference": "1064052816512",
                            "transactionDescription": "ND 160: TRANSFERENCIAS",
                            "transferDescription": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE",
                            "branch": {
                              "code": 259,
                              "name": "BANCA VIRTUAL"
                            },
                            "transactionType": {
                              "code": 50,
                              "description": "NOTA DE DEBITO COMUN"
                            },
                            "cause": {
                              "code": 156,
                              "description": "TRANSFERENCIAS EN BAMNET"
                            },
                            "check": 0,
                            "cashAmount": 30,
                            "ownCheckAmount": 0,
                            "localCheckAmount": 0,
                            "foreignCheckAmount": 0,
                            "creditAmount": 0,
                            "debitAmount": 30,
                            "availableAmount": 580
                          },
                          {
                            "sequential": 424722647,
                            "sequentialAlternate": 10,
                            "date": "2021-01-15",
                            "time": "13:57:29.52Z",
                            "datetime": "2021-01-15T13:59:15.688Z",
                            "reference": "1064052816867",
                            "transactionDescription": "ND 160: TRANSFERENCIAS",
                            "transferDescription": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE",
                            "branch": {
                              "code": 259,
                              "name": "BANCA VIRTUAL"
                            },
                            "transactionType": {
                              "code": 50,
                              "description": "NOTA DE DEBITO COMUN"
                            },
                            "cause": {
                              "code": 156,
                              "description": "TRANSFERENCIAS EN BAMNET"
                            },
                            "check": 0,
                            "cashAmount": 200,
                            "ownCheckAmount": 0,
                            "localCheckAmount": 0,
                            "foreignCheckAmount": 0,
                            "creditAmount": 0,
                            "debitAmount": 200,
                            "totalAmount": 380
                          },
                          {
                            "sequential": 424723987,
                            "sequentialAlternate": 10,
                            "date": "2021-01-15",
                            "time": "13:57:29.52Z",
                            "datetime": "2021-01-15T14:05:29.688Z",
                            "reference": "1064052817354",
                            "transactionDescription": "ND 160: TRANSFERENCIAS",
                            "transferDescription": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE",
                            "branch": {
                              "code": 259,
                              "name": "BANCA VIRTUAL"
                            },
                            "transactionType": {
                              "code": 50,
                              "description": "NOTA DE DEBITO COMUN"
                            },
                            "cause": {
                              "code": 156,
                              "description": "TRANSFERENCIAS EN BAMNET"
                            },
                            "check": 0,
                            "cashAmount": 75,
                            "ownCheckAmount": 0,
                            "localCheckAmount": 0,
                            "foreignCheckAmount": 0,
                            "creditAmount": 0,
                            "debitAmount": 75,
                            "totalAmount": 305
                          }
                        ],
                        "totalResults": 3,
                        "prevLimit": 10,
                        "prevOffset": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cuenta o movimientos no encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "No se encontro el numero de cuenta"
                    }
                  },
                  "MovementsNotFound": {
                    "value": {
                      "code": "MOVEMENTS_NOT_FOUND",
                      "message": "No se encontraron movimientos"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-deposits-movements-http",
        "description": "Consulta de movimientos de una cuenta monetaria o de ahorros por el numero de cuenta",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/InitDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ]
      }
    },
    "/demandDeposits/{accountType}/{accountNumber}/movementsMt940": {
      "parameters": [
        {
          "name": "accountType",
          "in": "path",
          "schema": {
            "type": "integer",
            "enum": [
              3,
              4,
              7,
              20,
              0
            ],
            "example": 3
          },
          "description": "Producto de la cuenta",
          "required": true
        },
        {
          "name": "accountNumber",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0078650033",
            "maxLength": 10,
            "minLength": 10
          },
          "description": "Numero de cuenta del producto"
        }
      ],
      "get": {
        "summary": "Consulta de movimientos Formato MT940",
        "tags": [
          "Consulta"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "mt940": {
                              "type": "string",
                              "description": "representa un string con el formato MT940"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "mt940RsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "mt940": ":20:0000000000011554 :25:3020100694 :28C:001/001 :60F:C151201GTQ95,19 :61:151201C65000,00FCMI73674299//1579235546 DEPOSITO :61:151201D65000,00FDDT416132//1579251780 ND 300: DEBITO TRANSFERENCI :61:151202C64950,00FCMI75418296//1579594234 DEPOSITO :61:151202D4500,00FCHK39900245//1579962523 CHEQUE PAGADO :61:151202D56500,00FCHK55200246//1580222562"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cuenta o movimientos no encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "No se encontro el numero de cuenta"
                    }
                  },
                  "MovementsNotFound": {
                    "value": {
                      "code": "MOVEMENTS_NOT_FOUND",
                      "message": "No se encontraron movimientos"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-deposits-movements-mt940-http",
        "description": "Consulta de movimientos de una cuenta monetaria o de ahorros por el numero de cuenta en formato MT940",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/InitDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ]
      }
    },
    "/demandDeposits/{accountType}/{accountNumber}/transaction": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountType",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "accountNumber",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Transacción monetaria",
        "operationId": "demand-deposits-transaction-http",
        "responses": {
          "200": {
            "description": "Transacción correcta",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "sequential": {
                                  "$ref": "../Models/Transactions/Secuential.v1.yaml"
                                },
                                "currencyConversion": {
                                  "type": "object",
                                  "properties": {
                                    "currencyAmount": {
                                      "$ref": "../Models/Products/Currency.v1.yaml"
                                    },
                                    "convertedAmount": {
                                      "$ref": "../Models/FinancialServices/ConvertedAmount.v1.yaml"
                                    },
                                    "rate": {
                                      "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                                    },
                                    "type": {
                                      "$ref": "../Models/FinancialServices/TypeRate.v1.yaml"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "TransactionRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "sequential": 424722004,
                          "currencyConversion": {
                            "currencyAmount": {
                              "code": 0,
                              "description": "QUETZAL"
                            },
                            "convertedAmount": 350.65,
                            "rate": 7.65434,
                            "type": "VENTA"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "NotAcceptableRsExample": {
                    "value": {
                      "code": "NOT_ACCEPTABLE",
                      "message": "Operación no aceptada."
                    }
                  },
                  "CurrencyMismatch": {
                    "value": {
                      "code": "CURRENCY_MISMATCH",
                      "message": "La moneda de la cuenta difiere de la especificada."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Realiza una operación de crédito o debito a una cuenta monetaria o de ahorros considerando el desbloqueo de fondos y compra venta de divisas previa.",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "$ref": "../Models/CreditCard/Amount.v1.yaml"
                  },
                  "causeCode": {
                    "$ref": "../Models/Transactions/CauseCode.yaml"
                  },
                  "transactionType": {
                    "$ref": "../Models/Transactions/TransactionTypeCode.v1.yaml"
                  },
                  "reference": {
                    "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                  },
                  "concept": {
                    "$ref": "../Models/Transactions/TransactionDescription.v1.yaml"
                  },
                  "fronzenBalanceCode": {
                    "$ref": "../Models/Deposits/FrozenBalance.v1.yaml"
                  },
                  "reverse": {
                    "type": "object",
                    "properties": {
                      "referenceReverse": {
                        "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                      }
                    },
                    "required": [
                      "referenceReverse"
                    ]
                  }
                },
                "required": [
                  "amount",
                  "causeCode",
                  "transactionType"
                ]
              },
              "examples": {
                "CreditRqExample": {
                  "value": {
                    "amount": 125.5,
                    "causeCode": 1456,
                    "transactionType": "CREDITO",
                    "reference": "1064052816512",
                    "concept": "DESEMBOLSO DE EXTRAFINANCIAMIENTO",
                    "currencyConversion": {
                      "originCurrency": 0,
                      "destinationCurrency": 1,
                      "amountType": "D",
                      "sequentialPreAut": 424722004
                    }
                  }
                },
                "DebitRqExample": {
                  "value": {
                    "amount": 50,
                    "causeCode": 7656,
                    "transactionType": "DEBITO",
                    "reference": "1064056512",
                    "concept": "DEBITO PARA PAGO DE SERVICIOS",
                    "fronzenBalanceCode": 7378236520
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transacciones"
        ]
      }
    },
    "/demandDeposits/transfer": {
      "parameters": [],
      "post": {
        "summary": "Transferencia monetaria",
        "operationId": "demand-deposits-transfer-http",
        "responses": {
          "200": {
            "description": "Transacción correcta",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "sequential": {
                                  "$ref": "../Models/Transactions/Secuential.v1.yaml"
                                },
                                "currencyConversion": {
                                  "type": "object",
                                  "properties": {
                                    "currencyAmount": {
                                      "$ref": "../Models/Products/Currency.v1.yaml"
                                    },
                                    "convertedAmount": {
                                      "$ref": "../Models/FinancialServices/ConvertedAmount.v1.yaml"
                                    },
                                    "rate": {
                                      "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                                    },
                                    "type": {
                                      "$ref": "../Models/FinancialServices/TypeRate.v1.yaml"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "TransactionRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "sequential": 424722004,
                          "currencyConversion": {
                            "currencyAmount": {
                              "code": 0,
                              "description": "QUETZAL"
                            },
                            "convertedAmount": 350.65,
                            "rate": 7.65434,
                            "type": "VENTA"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/Insufficient-Founds"
          },
          "404": {
            "$ref": "#/components/responses/Resource-Not-Found"
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "NotAcceptableRsExample": {
                    "value": {
                      "code": "NOT_ACCEPTABLE",
                      "message": "Operación no aceptada"
                    }
                  },
                  "CurrencyMismatchRsExample": {
                    "value": {
                      "code": "CURRENCY_MISMATCH",
                      "message": "La moneda de la cuenta difiere de la especificada."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/Processing-Error"
          },
          "423": {
            "$ref": "#/components/responses/Resource-Is-Locked"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Realiza una operación de transferencia entre cuentas monetaria o de ahorros considerando compra venta de divisas previa.",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "originAccountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "originAccountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "originCurrency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "destinationAccountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "destinationAccountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "destinationCurrency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "amount": {
                    "$ref": "../Models/CreditCard/Amount.v1.yaml"
                  },
                  "reference": {
                    "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                  },
                  "concept": {
                    "$ref": "../Models/Transactions/TransactionDescription.v1.yaml"
                  },
                  "currencyConversion": {
                    "type": "object",
                    "description": "Datos de origen y destino para cruce de monedas",
                    "properties": {
                      "amountType": {
                        "$ref": "../Models/FinancialServices/amountType.yaml"
                      },
                      "sequentialPreAut": {
                        "$ref": "../Models/FinancialServices/SequentialPreAut.v1.yaml"
                      }
                    },
                    "required": [
                      "amountType"
                    ]
                  },
                  "reverse": {
                    "type": "object",
                    "properties": {
                      "referenceReverse": {
                        "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                      }
                    },
                    "required": [
                      "referenceReverse"
                    ]
                  }
                },
                "required": [
                  "originAccountType",
                  "originAccountNumber",
                  "originCurrency",
                  "destinationAccountType",
                  "destinationAccountNumber",
                  "destinationCurrency",
                  "amount"
                ]
              },
              "examples": {
                "TransferRqExample": {
                  "value": {
                    "originAccountType": 4,
                    "originAccountNumber": "3645770022",
                    "originCurrency": 0,
                    "destinationAccountType": 4,
                    "destinationAccountNumber": "3645770022",
                    "destinationCurrency": 0,
                    "amount": 125.5,
                    "reference": "1064052816512",
                    "concept": "TRANSFERENCIA ENTRE CUENTAS PROPIAS"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transacciones"
        ]
      }
    },
    "/demandDeposits/transfer/ach": {
      "parameters": [],
      "post": {
        "summary": "Transferencia ACH",
        "operationId": "demand-deposits-transfer-ach-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "referenceAch": {
                                  "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                },
                                "achType": {
                                  "$ref": "../Models/Deposits/AchType.yaml"
                                },
                                "effectiveDate": {
                                  "$ref": "../Models/Deposits/EffectiveDate.yaml"
                                },
                                "referenceDeposits": {
                                  "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "TransferAchRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "sequentialAch": 8746273,
                          "achType": "Normal",
                          "effectiveDate": "2021-02-15",
                          "sequentialDeposits": 25382930
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Realiza una trasferencia ACH de crédito o débito ",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "tags": [
          "Transacciones"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transactionType": {
                    "$ref": "../Models/Transactions/TransactionTypeCode.v1.yaml"
                  },
                  "amount": {
                    "$ref": "../Models/CreditCard/Amount.v1.yaml"
                  },
                  "customerAch": {
                    "$ref": "../Models/Deposits/AchParticipant.v1.yaml"
                  },
                  "bankCode": {
                    "$ref": "../Models/Deposits/BankCode.yaml"
                  },
                  "destinationAccountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "destinationAccountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "currency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "company": {
                    "$ref": "../Models/Deposits/CompanyAch.yaml"
                  },
                  "originAccountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "originAccountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "description": {
                    "$ref": "../Models/Transactions/TransactionDescription.v1.yaml"
                  },
                  "localOperation": {
                    "$ref": "../Models/Deposits/LocalAchOperation.v1.yaml"
                  },
                  "localOperationSeq": {
                    "$ref": "../Models/Deposits/LocalOperationSeq.v1.yaml"
                  }
                },
                "required": [
                  "transactionType",
                  "amount",
                  "customerAch",
                  "bankCode",
                  "destinationAccountNumber",
                  "destinationAccountType",
                  "currency",
                  "company",
                  "originAccountNumber",
                  "originAccountType",
                  "description"
                ]
              },
              "examples": {
                "AchCreditRqExample": {
                  "value": {
                    "transactionType": "CREDITO",
                    "amount": 125.5,
                    "customerAch": {
                      "code": "0000012345",
                      "nameCustomerAch": "Juan Perez"
                    },
                    "bankCode": 45,
                    "account": "3645770022",
                    "accountType": 4,
                    "currency": 0,
                    "company": {
                      "code": 5874,
                      "name": "Scarlet Mendez"
                    },
                    "originAccountNumber": "3628736498",
                    "originAccountType": 3,
                    "description": "Débito a cuenta BAM y crédito a cuenta ACH",
                    "destinationAccountType": 3,
                    "destinationAccountNumber": "3628736491",
                    "localOperation": true,
                    "localOperationSeq": 424722004
                  }
                },
                "AchDebitRqExample": {
                  "value": {
                    "transactionType": "DEBITO",
                    "amount": 125.5,
                    "customerAch": {
                      "code": "0000012345",
                      "nameCustomerAch": "Juan Perez"
                    },
                    "bankCode": 44,
                    "destinationAccountNumber": "3645770022",
                    "destinationAccountType": 3,
                    "currency": 0,
                    "company": {
                      "code": 1,
                      "name": "PABLALES, S.A."
                    },
                    "originAccountNumber": "3645770022",
                    "originAccountType": 3,
                    "description": "Crédito a cuenta BAM y débito a cuenta ACH"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/demandDeposits/ach/localAccountValidation": {
      "post": {
        "summary": "Validación local de cuenta ACH",
        "operationId": "ach-local-account-validation-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Destination": {
                      "$ref": "../Models/ICG/BIC-Destination.v1.yaml"
                    },
                    "type": {
                      "$ref": "../Models/ICG/AchResponseType.v1.yaml"
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "found": {
                          "$ref": "../Models/ICG/AchAccountFound.v1.yaml"
                        },
                        "name": {
                          "$ref": "../Models/ICG/AchAccountName.v1.yaml"
                        }
                      }
                    },
                    "UUID": {
                      "$ref": "../Models/ICG/AchUUID.v1.yaml"
                    },
                    "Source": {
                      "$ref": "../Models/ICG/BIC-Origin.v1.yaml"
                    }
                  }
                },
                "examples": {
                  "AchAccountFoundRsExample": {
                    "value": {
                      "Destination": "AGROGTGC",
                      "type": "002",
                      "payload": {
                        "found": true,
                        "name": ""
                      },
                      "UUID": "936bae7c-bfec-11eb-8529-0242ac130003",
                      "Source": "AGROGTGC"
                    }
                  },
                  "AchAccountNotFoundRsExample": {
                    "value": {
                      "Destination": "AGROGTGC",
                      "type": "002",
                      "payload": {
                        "found": false,
                        "name": ""
                      },
                      "UUID": "936bae7c-bfec-11eb-8529-0242ac130003",
                      "Source": "AGROGTGC"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Validación local para cuentas ACH consultadas desde otros bancos del sistema.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "AchAccountValidationRqExample": {
                  "value": {
                    "Destination": "AGROGTGC",
                    "type": "001",
                    "payload": {
                      "account": "GT07AGRO01010000003510597899",
                      "currency": 1,
                      "product": 1
                    },
                    "Source": "AGROGTGC",
                    "UUID": "936bae7c-bfec-11eb-8529-0242ac130003"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          }
        ],
        "tags": [
          "ACH"
        ],
        "security": []
      },
      "parameters": []
    },
    "/demandDeposits/check/declared": {
      "get": {
        "summary": "Consulta de cheques",
        "tags": [
          "Cheques"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "checks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "checkNumber": {
                                    "$ref": "../Models/Deposits/Checks/CheckNumber.v1.yaml"
                                  },
                                  "dateDeclared": {
                                    "$ref": "../Models/Deposits/Checks/DateDeclared.v1.yaml"
                                  },
                                  "amount": {
                                    "$ref": "../Models/Deposits/Checks/AmountDeclared.v1.yaml"
                                  },
                                  "state": {
                                    "$ref": "../Models/Deposits/Checks/CheckState.v1.yaml"
                                  },
                                  "stateCode": {
                                    "$ref": "../Models/Deposits/Checks/CheckStateCode.v1.yaml"
                                  }
                                }
                              }
                            },
                            "totalResults": {
                              "$ref": "../Models/Pagination/TotalResults.v1.yaml"
                            },
                            "prevLimit": {
                              "$ref": "../Models/Pagination/PrevLimit.v1.yaml"
                            },
                            "prevOffset": {
                              "$ref": "../Models/Pagination/PrevOffset.v1.yaml"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "CheckRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "checks": [
                          {
                            "checkNumber": 33278,
                            "dateDeclared": "2021-02-15",
                            "amount": 1235.2,
                            "state": "DECLARADO",
                            "stateCode": "D"
                          },
                          {
                            "checkNumber": 33221,
                            "dateDeclared": "2021-09-28",
                            "amount": 48436.2,
                            "state": "PAGADO",
                            "stateCode": "P"
                          }
                        ],
                        "totalResults": 2,
                        "prevLimit": 10,
                        "prevOffset": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Check Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "ChecksNotFoundRsExample": {
                    "value": {
                      "code": "CHECKS_NOT_FOUND",
                      "message": "No se encontro cheques"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-check-declared-http",
        "description": "Consulta de cheques por rango de fecha, número de cheque especifico o número de chequera",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "#/components/parameters/AccountNumberQ"
          },
          {
            "$ref": "#/components/parameters/CheckNumber"
          },
          {
            "schema": {
              "type": "string",
              "example": "2021-01-15",
              "format": "date"
            },
            "in": "query",
            "name": "initDate",
            "description": "Fecha inicial (no exigible solo si se envía numero de cheque)"
          },
          {
            "schema": {
              "type": "string",
              "example": "2021-01-15",
              "format": "date"
            },
            "in": "query",
            "name": "endDate",
            "description": "Fecha final (no exigible solo si se envía numero de cheque)"
          },
          {
            "$ref": "#/components/parameters/OffSet"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Checkbook"
          },
          {
            "$ref": "#/components/parameters/CheckStatusCode"
          }
        ]
      },
      "delete": {
        "summary": "Elimina cheque declarado",
        "operationId": "delete-check-declared-http",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckNotFoundRsExample": {
                    "value": {
                      "code": "CHECK_NOT_FOUND",
                      "message": "No se encontro ningun cheque con el numero indicado"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "422": {
            "description": "Estado invalido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckStatusInvalidRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_INVALID",
                      "message": "Estado de cheque invalido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Elimina la declaracion de un cheque especifico",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "checkNumber": {
                    "$ref": "../Models/Deposits/Checks/CheckNumber.v1.yaml"
                  }
                }
              },
              "examples": {
                "BodyRsExample": {
                  "value": {
                    "accountNumber": "3645770022",
                    "checkNumber": 33278
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Cheques"
        ]
      },
      "post": {
        "summary": "Declaracion de cheques",
        "operationId": "declared-check-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "$ref": "../Models/Res-Id-Referencia.v1.json"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SuccessfullRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "idReference": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckNotFoundRsExample": {
                    "value": {
                      "code": "CHECK_NOT_FOUND",
                      "message": "No se encontro ningun cheque con el numero indicado"
                    }
                  },
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "No se encontro el numero de cuenta"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckStatusCanceledRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_CANCELED",
                      "message": "Estado de cheque invalido - anulado"
                    }
                  },
                  "CheckStatusDeclaredRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_DECLARED",
                      "message": "Estado de cheque invalido - declarado"
                    }
                  },
                  "CheckStatusPaidRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_PAID",
                      "message": "Estado de cheque invalido - pagado"
                    }
                  },
                  "CheckStatusRevokedRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_REVOKED",
                      "message": "Estado de cheque invalido - revocado"
                    }
                  },
                  "CheckStatusConformedRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_CONFORMED",
                      "message": "Estado de cheque invalido - conformado"
                    }
                  },
                  "CheckStatusExpiredRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_EXPIRED",
                      "message": "Estado de cheque invalido - caducado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Servicio que realiza la declaración el monto de un cheque en especifico",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "checkNumber": {
                    "$ref": "../Models/Deposits/Checks/CheckNumber.v1.yaml"
                  },
                  "amount": {
                    "$ref": "../Models/Deposits/Checks/AmountDeclared.v1.yaml"
                  }
                },
                "required": [
                  "accountNumber",
                  "checkNumber",
                  "amount"
                ]
              },
              "examples": {
                "BodyRsExample": {
                  "value": {
                    "accountNumber": "3645770022",
                    "checkNumber": 33278,
                    "amount": 1235.2
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Cheques"
        ]
      }
    },
    "/demandDeposits/ach/remoteAccountValidation": {
      "parameters": [],
      "post": {
        "summary": "Validar cuenta ACH",
        "responses": {
          "200": {
            "description": "Validación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "found"
                              ],
                              "properties": {
                                "found": {
                                  "$ref": "../Models/Deposits/AccountFound.v1.yaml"
                                },
                                "name": {
                                  "$ref": "../Models/ICG/AchAccountName.v1.yaml"
                                }
                              }
                            }
                          },
                          "required": [
                            "result"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "AchAccountValidationRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "found": true,
                          "name": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AchAccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta no encontrada"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "ach-remote-account-validation-http",
        "description": "Validar la existencia de una cuenta monetaria, ahorros, prestamos o tarjeta de crédito desde otro banco a través del sistema ACH",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bankCode": {
                    "$ref": "../Models/Deposits/BankCode.yaml"
                  },
                  "accountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "currency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  }
                },
                "required": [
                  "bankCode",
                  "accountType",
                  "accountNumber",
                  "currency"
                ]
              },
              "examples": {
                "AchAccountValidationRqExample": {
                  "value": {
                    "bankCode": 16,
                    "accountType": 4,
                    "accountNumber": "3645770022",
                    "currency": 0
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "ACH"
        ]
      }
    },
    "/demandDeposits/account": {
      "post": {
        "summary": "Creación de Cuenta para depósitos",
        "operationId": "demanddeposits-account-create-http",
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "accountNumber"
                              ],
                              "properties": {
                                "accountNumber": {
                                  "$ref": "../Models/Products/AccountNumber.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "CuentaFacilCreateRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "accountName": "Juan David Sandoval Cardona",
                          "accountNumber": "102931823"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerStateInvalidRsExample": {
                    "value": {
                      "code": "CUSTOMER_STATE_INVALID",
                      "message": "Cliente en estado invalido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Crea una cuenta monetaria / ahorro",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productType": {
                    "$ref": "../Models/Products/ProductTypeCode.v1.yaml"
                  },
                  "productClass": {
                    "$ref": "../Models/FinancialServices/ProductClassCode.v1.yaml"
                  },
                  "idCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "currency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "mailStatement": {
                    "$ref": "../Models/Deposits/mailStatement.v1.yaml"
                  },
                  "monthlyAverage": {
                    "$ref": "../Models/Deposits/MonthlyAverage.v1.yaml"
                  },
                  "foundSource": {
                    "$ref": "../Models/Deposits/FoundSourceCode.v1.yaml"
                  }
                },
                "required": [
                  "productType",
                  "productClass",
                  "idCobis",
                  "currency",
                  "mailStatement",
                  "monthlyAverage",
                  "foundSource"
                ]
              },
              "examples": {
                "CuentaFacilCreateRqExample": {
                  "value": {
                    "productType": 3,
                    "productClass": "17",
                    "idCobis": 205817,
                    "currency": 0,
                    "mailStatement": "S",
                    "monthlyAverage": 60000,
                    "foundSource": "11"
                  }
                }
              }
            }
          },
          "description": "Datos requeridos para la ejecución"
        },
        "tags": [
          "Gestiones"
        ]
      },
      "parameters": []
    },
    "/demandDeposits/check/checkbook": {
      "post": {
        "summary": "Solicitud de chequeras",
        "operationId": "request-checkbook-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "deliveryDate": {
                                  "$ref": "../Models/Deposits/Checks/DeliveryDate.v1.yaml"
                                },
                                "referenceNumber": {
                                  "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                },
                                "numberCheckbookCreated": {
                                  "type": "integer",
                                  "description": "cantidad de chequeras creadas",
                                  "minimum": 0,
                                  "example": 1
                                },
                                "commissionAmount": {
                                  "$ref": "../Models/Deposits/Checks/CheckbookCommission.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "checkbookSuccessfullRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "deliveryDate": "2021-02-15",
                          "referenceNumber": "1064052816512",
                          "numberCheckbookCreated": 1,
                          "commissionAmount": 125
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "PaymentRequiredRsExample": {
                    "value": {
                      "code": "PAYMENT_REQUIRED",
                      "message": "Payment required",
                      "errors": [
                        {
                          "code": "PAYMENT_REQUIRED",
                          "param": "account",
                          "message": "Fondos insuficientes"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "operationFailedRsExample": {
                    "value": {
                      "code": "OPERATION_FAILED",
                      "message": "Operation failed",
                      "errors": [
                        {
                          "code": "OPERATION_FAILED",
                          "param": "debit",
                          "message": "Error al realizar el débito"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Servicio que se encarga de la solicitud de una chequera para las cuentas de depositos monetarios y de ahorros.",
        "tags": [
          "Cheques"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./debitCards.v1.json#/components/parameters/User"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "currency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "checkbookType": {
                    "$ref": "../Models/Deposits/Checks/checkbookTypeCode.v1.yaml"
                  },
                  "numberOfCheckbooks": {
                    "type": "integer",
                    "description": "Cantidad de chequeras solicitadas",
                    "format": "int32",
                    "minimum": 0
                  },
                  "numberOfChecks": {
                    "type": "integer",
                    "description": "Cantidad de cheques por chequera.",
                    "format": "int32",
                    "minimum": 0
                  },
                  "deliveryBranch": {
                    "$ref": "../Models/Cobis/BranchCode.yaml"
                  }
                },
                "required": [
                  "accountNumber",
                  "currency",
                  "checkbookType",
                  "numberOfCheckbooks",
                  "numberOfChecks",
                  "deliveryBranch"
                ]
              },
              "examples": {
                "BodyRqExample": {
                  "value": {
                    "accountNumber": "3645770022",
                    "currency": 0,
                    "checkbookType": "A1",
                    "numberOfCheckbooks": 1,
                    "numberOfChecks": 25,
                    "deliveryBranch": 156
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [],
      "put": {
        "summary": "Consulta de chequeras por cuenta",
        "operationId": "put-check-checkbook-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "checkbooks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "checkbookNumber": {
                                    "$ref": "../Models/Deposits/Checks/CheckbookNumber.v1.yaml"
                                  },
                                  "initialCheckNumber": {
                                    "$ref": "../Models/Deposits/Checks/CheckNumber.v1.yaml"
                                  },
                                  "checkQuantity": {
                                    "$ref": "../Models/Deposits/Checks/CheckQuantity.v1.yaml"
                                  },
                                  "checkbookStatus": {
                                    "$ref": "../Models/Deposits/Checks/CheckbookStatus.v1.yaml"
                                  },
                                  "lastCheckNumber": {
                                    "$ref": "../Models/Transactions/CheckNumber.v1.yaml"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SuccesRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "checkbooks": [
                          {
                            "checkbookNumber": 30,
                            "initialCheckNumber": 33278,
                            "checkQuantity": 50,
                            "checkbookStatus": "ENTREGADA A CLIENTE"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "#/components/parameters/CheckbookStatusCode"
          }
        ],
        "description": "Servicio que devuelve las chequeras de una cuenta monetaria, ordenadas de la más reciente a la más antigua, se limita a 500 chequeras",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Cheques"
        ]
      }
    },
    "/demandDeposits/check/suspend": {
      "delete": {
        "summary": "Suspensión de Cheques",
        "operationId": "delete-check-suspension-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "idOperacion": {
                              "$ref": "../Models/Operation/OperationId.yaml"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SuccessRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "idOperacion": 12345
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckNumberNotFoundRsExample": {
                    "value": {
                      "code": "CHECK_NOT_FOUND",
                      "message": "No se encontro ningún cheque con el número indicado"
                    }
                  },
                  "CheckbookNotFoundRsExample": {
                    "value": {
                      "code": "CHECKBOOK_NOT_FOUND",
                      "message": "No se encontro la chequera con el número indicado"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Estado invalido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckStatusInvalidRsExample": {
                    "value": {
                      "code": "CHECK_STATUS_INVALID",
                      "message": "Estado de cheque no válido"
                    }
                  },
                  "CheckbookStatusInvalidRsExample": {
                    "value": {
                      "code": "CHECKBOOK_STATUS_INVALID",
                      "message": "Estado de la chequera no válido"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckSuspensionErrorRsExample": {
                    "value": {
                      "code": "CHECK_SUSPENSION_ERROR",
                      "message": "No se puede suspender el cheque."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Servicio que realiza la suspensión de cheques",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "checkbookNumber": {
                    "$ref": "../Models/Deposits/Checks/CheckbookNumber.v1.yaml"
                  },
                  "suspensionReasonCode": {
                    "$ref": "../Models/Deposits/Checks/CheckSuspensionReasonCode.v1.yaml"
                  },
                  "checkNumberList": {
                    "type": "array",
                    "items": {
                      "$ref": "../Models/Transactions/CheckNumber.v1.yaml"
                    }
                  }
                },
                "required": [
                  "accountNumber",
                  "checkbookNumber",
                  "suspensionReasonCode",
                  "checkNumberList"
                ]
              },
              "examples": {
                "BodyRsExample": {
                  "value": {
                    "accountNumber": "3645770022",
                    "checkNumber": 33278
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Cheques"
        ]
      },
      "parameters": []
    },
    "/demandDeposit/bamavisa": {
      "parameters": [],
      "post": {
        "summary": "Afiliación a servicio Bamavisa",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    }
                  ]
                },
                "examples": {
                  "OperationSuccessRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "BadRequestRsExample": {
                    "value": {
                      "code": "BAD_REQUEST",
                      "message": "BAD REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta no encontrada"
                    }
                  },
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerAffiliatedRsExample": {
                    "value": {
                      "code": "CUSTOMER_AFFILIATED",
                      "message": "Cliente se encuentra Afiliado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "affiliation-bamavisa-http",
        "description": "Afiliación a servicio de notificación Bamavisa",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "account": {
                    "type": "array",
                    "description": "Cuentas que se utilizan para pago y exclusion del ´proceso bamavisa",
                    "items": {
                      "type": "object",
                      "properties": {
                        "accountType": {
                          "$ref": "../Models/Products/AccountTypeCode.yaml"
                        },
                        "accountNumber": {
                          "$ref": "../Models/Products/AccountNumber.v1.yaml"
                        },
                        "currency": {
                          "$ref": "../Models/Products/CurrencyCode.yaml"
                        },
                        "accountProcessType": {
                          "$ref": "../Models/Deposits/AccountProcessType.v1.yaml"
                        }
                      },
                      "required": [
                        "accountType",
                        "accountNumber",
                        "currency",
                        "accountProcessType"
                      ]
                    }
                  },
                  "billing": {
                    "type": "object",
                    "required": [
                      "feeType",
                      "availableAmount"
                    ],
                    "properties": {
                      "feeType": {
                        "$ref": "../Models/Products/FeeType.v1.yaml"
                      },
                      "availableAmount": {
                        "$ref": "../Models/Deposits/availableAmount.v1.yaml"
                      }
                    }
                  },
                  "notification": {
                    "type": "object",
                    "properties": {
                      "phoneId": {
                        "$ref": "../Models/Customer/PhoneId.v1.yaml"
                      },
                      "emailId": {
                        "$ref": "../Models/Cobis/AddressId.v1.yaml"
                      }
                    }
                  }
                },
                "required": [
                  "idCobis",
                  "account",
                  "billing",
                  "notification"
                ]
              },
              "examples": {
                "AfiliacionBamavisaRqExample": {
                  "value": {
                    "idCobis": 205017,
                    "account": [
                      {
                        "accountType": 3,
                        "accountNumber": "3645770022",
                        "currency": 0,
                        "accountProcessType": "C"
                      }
                    ],
                    "billing": {
                      "feeType": "PAR",
                      "availableAmount": "S"
                    },
                    "notification": {
                      "phoneId": 1,
                      "emailId": 1
                    }
                  }
                },
                "requestBamavisaExample": {
                  "value": {
                    "idCobis": 205178,
                    "account": [
                      {
                        "accountType": 3,
                        "accountNumber": "3645710022",
                        "currency": 0,
                        "accountProcessType": "C"
                      },
                      {
                        "accountType": 3,
                        "accountNumber": "364577022",
                        "currency": 0,
                        "accountProcessType": "B"
                      },
                      {
                        "accountType": 3,
                        "accountNumber": "3645570022",
                        "currency": 0,
                        "accountProcessType": "B"
                      }
                    ],
                    "billing": {
                      "feeType": "PAR",
                      "availableAmount": "S"
                    },
                    "notification": {
                      "phoneId": 123,
                      "emailId": 1
                    }
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para afiliación en body"
        },
        "tags": [
          "Bamavisa"
        ]
      },
      "put": {
        "summary": "Actualización a servicio Bamavisa",
        "operationId": "manage-bamavisa-http",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Response.v1.json"
                },
                "examples": {
                  "OPERATION_SUCCESSFUL": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "BadRequestRsExample": {
                    "value": {
                      "code": "BAD_REQUEST",
                      "message": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  },
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta no encontrada"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerStateInvalidRsExample": {
                    "value": {
                      "code": "CUSTOMER_STATE_INVALID",
                      "message": "Cliente en estado invalido"
                    }
                  },
                  "AccountStateInvalidRsExample": {
                    "value": {
                      "code": "ACCOUNT_STATE_INVALID",
                      "message": "Cuenta en estado invalido"
                    }
                  },
                  "CustomerAffiliatedRsExample": {
                    "value": {
                      "code": "CUSTOMER_AFFILIATED",
                      "message": "Cliente se encuentra Afiliado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "description": "Actualización a afiliación de cliente en servicio Bamavisa",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "idCobis": 205981,
                    "affiliatedProduct": 3,
                    "accountNumber": "3645770022",
                    "currency": 0,
                    "billing": {
                      "feeType": "PAR",
                      "paymentSource": "OPT1"
                    },
                    "notification": {
                      "phoneId": "123",
                      "emailId": 1
                    }
                  }
                },
                "properties": {
                  "idCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "account": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Cuentas que se utilizan para pago y exclusion del ´proceso bamavisa",
                      "properties": {
                        "accountType": {
                          "$ref": "../Models/Products/AccountTypeCode.yaml"
                        },
                        "accountNumber": {
                          "$ref": "../Models/Products/AccountNumber.v1.yaml"
                        },
                        "currency": {
                          "$ref": "../Models/Products/CurrencyCode.yaml"
                        },
                        "accountProcessType": {
                          "$ref": "../Models/Deposits/AccountProcessType.v1.yaml"
                        }
                      },
                      "required": [
                        "accountType",
                        "accountNumber",
                        "currency",
                        "accountProcessType"
                      ]
                    }
                  },
                  "billing": {
                    "type": "object",
                    "required": [
                      "feeType",
                      "availableAmount"
                    ],
                    "properties": {
                      "feeType": {
                        "$ref": "../Models/Products/FeeType.v1.yaml"
                      },
                      "availableAmount": {
                        "$ref": "../Models/Deposits/availableAmount.v1.yaml"
                      }
                    }
                  },
                  "notification": {
                    "type": "object",
                    "properties": {
                      "phoneId": {
                        "$ref": "../Models/Customer/PhoneId.v1.yaml"
                      },
                      "emailId": {
                        "$ref": "../Models/Cobis/EmailId.v1.yaml"
                      }
                    }
                  }
                },
                "required": [
                  "idCobis",
                  "account",
                  "billing",
                  "notification"
                ]
              },
              "examples": {
                "UpdateBamavisaRqExample2": {
                  "value": {
                    "idCobis": 1,
                    "account": [
                      {
                        "accountType": 3,
                        "accountNumber": "3645771122",
                        "currency": 0,
                        "accountProcessType": "C"
                      },
                      {
                        "accountType": 3,
                        "accountNumber": "3645770022",
                        "currency": 0,
                        "accountProcessType": "B"
                      }
                    ],
                    "billing": {
                      "feeType": "PAR",
                      "availableAmount": "S"
                    },
                    "notification": {
                      "phoneId": 123,
                      "emailId": 1
                    }
                  }
                },
                "UpdateBamavisaRqExample1": {
                  "value": {
                    "idCobis": 1,
                    "account": [
                      {
                        "accountType": 3,
                        "accountNumber": "3645770022",
                        "currency": 0,
                        "accountProcessType": "C"
                      },
                      {
                        "accountType": 3,
                        "accountNumber": "3635770022",
                        "currency": 0,
                        "accountProcessType": "B"
                      },
                      {
                        "accountType": 3,
                        "accountNumber": "3645770022",
                        "currency": 0,
                        "accountProcessType": "E"
                      }
                    ],
                    "billing": {
                      "feeType": "PAR",
                      "availableAmount": "S"
                    },
                    "notification": {
                      "phoneId": 123,
                      "emailId": 1
                    }
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para actualización de afiliación en servicio bamavisa"
        },
        "tags": [
          "Bamavisa"
        ]
      }
    },
    "/demandDeposits/agreement/pdf": {
      "post": {
        "summary": "Generación de contrato de producto bancario",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "documentType": {
                                    "$ref": "../Models/Deposits/DocumentType.v1.yaml"
                                  },
                                  "document": {
                                    "$ref": "../Models/Products/Documents.v1.yaml"
                                  }
                                },
                                "required": [
                                  "documentType",
                                  "document"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "GeneratedDocumentRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": [
                          {
                            "documentType": "1",
                            "document": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "NotAuthorizedRsExample": {
                    "value": {
                      "code": "NOT_AUTHORIZED",
                      "message": "Ejecución no autorizada"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta no encontrada"
                    }
                  },
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "DocumentTypeNotRegisteredRsExample": {
                    "value": {
                      "code": "DOCUMENT_NOT_REGISTERED",
                      "message": "Tipo de documento no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "agreement-account-http",
        "description": "Generación de documentos contractuales asociados a producto bancario",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productType": {
                    "$ref": "../Models/Products/ProductTypeCode.v1.yaml"
                  },
                  "productNumber": {
                    "$ref": "../Models/FinancialServices/ProductNumber.v1.yaml"
                  },
                  "idCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "otp": {
                    "$ref": "../Models/Security/OTP.v1.yaml"
                  },
                  "document": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "documentType": {
                          "$ref": "../Models/Deposits/DocumentType.v1.yaml"
                        }
                      },
                      "required": [
                        "documentType"
                      ]
                    }
                  }
                },
                "required": [
                  "productType",
                  "productNumber",
                  "idCobis",
                  "document"
                ]
              },
              "examples": {
                "AgreementRqExample": {
                  "value": {
                    "productType": 3,
                    "productNumber": "2040173489",
                    "idCobis": 205718,
                    "otp": "1234567",
                    "document": [
                      {
                        "documentType": "1"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para la generación de documentos"
        },
        "tags": [
          "Gestiones"
        ]
      },
      "parameters": []
    },
    "/demandDeposit/beneficiaries": {
      "post": {
        "summary": "Registro de beneficiario",
        "tags": [
          "Gestiones"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Response.v1.json"
                },
                "examples": {
                  "BeneficiarysRegisterRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta no encontrada"
                    }
                  },
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "BeneficiaryRegisterErrorRsExample": {
                    "value": {
                      "code": "BENEFICIARY_REGISTER_ERROR",
                      "message": "Error de registro de beneficiario"
                    }
                  },
                  "BeneficiaryPercentageMaxErrorRsExample": {
                    "value": {
                      "code": "BENEFICIARY_PERCENTAGE_ERROR",
                      "message": "No se permite que la suma del porcentaje de beneficiarios exceda el 100%"
                    }
                  },
                  "BeneficiaryPercentageMinErrorRsExample": {
                    "value": {
                      "code": "BENEFICIARY_PERCENTAGE_ERROR",
                      "message": "No se permite que la suma del porcentaje de beneficiarios sea menor a 100%"
                    }
                  },
                  "BeneficiaryRegisterNumberErrorRsExample": {
                    "value": {
                      "code": "BENEFICIARY_REGISTER_NUMBER_ERROR",
                      "message": "No se cumple con el registro establecido de beneficiarios en request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "beneficiaries-account-http",
        "description": "Registro de beneficiarios para cuentas de ahorro y deposito",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "accountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "accountClass": {
                    "$ref": "../Models/FinancialServices/ProductClassCode.v1.yaml"
                  },
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "beneficiariesNumber": {
                    "$ref": "../Models/Deposits/Beneficiary/BeneficiaryNumber.v1.yaml"
                  },
                  "beneficiaries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "person": {
                          "type": "object",
                          "properties": {
                            "fullName": {
                              "$ref": "../Models/Deposits/Beneficiary/BeneficiaryName.v1.yaml"
                            },
                            "address": {
                              "$ref": "../Models/Deposits/Beneficiary/BeneficiaryAddress.v1.yaml"
                            },
                            "relationship": {
                              "$ref": "../Models/Deposits/Beneficiary/BeneficiaryRelationship.v1.yaml"
                            },
                            "percentage": {
                              "$ref": "../Models/Deposits/Beneficiary/BeneficiaryPercentage.v1.yaml"
                            }
                          },
                          "required": [
                            "fullName",
                            "address",
                            "relationship",
                            "percentage"
                          ]
                        }
                      },
                      "required": [
                        "person"
                      ]
                    }
                  }
                },
                "required": [
                  "idCobis",
                  "accountType",
                  "accountClass",
                  "accountNumber",
                  "beneficiariesNumber",
                  "beneficiaries"
                ]
              },
              "examples": {
                "BeneficiaryRegisterRqExample": {
                  "value": {
                    "idCobis": 205017,
                    "accountType": 3,
                    "accountClass": "S",
                    "accountNumber": "3645770022",
                    "beneficiariesNumber": 3,
                    "beneficiaries": [
                      {
                        "person": {
                          "fullName": "CARLOS FERNANDO PEREZ LOPEZ",
                          "address": "4TA CALLE ZONA 10 MIXCO GUATEMALA",
                          "relationship": {
                            "code": "001",
                            "description": "HERMANO"
                          },
                          "percentage": 50
                        }
                      },
                      {
                        "person": {
                          "fullName": "CARLOS AXEL SOLORZANO",
                          "address": "4TA CALLE ZONA 10 MIXCO GUATEMALA",
                          "relationship": {
                            "code": "002",
                            "description": "PADRE"
                          },
                          "percentage": 50
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para registro de beneficiario"
        }
      }
    },
    "/demandDeposits/check/image": {
      "get": {
        "summary": "Consulta de imágenes de cheques",
        "tags": [
          "Cheques"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "document"
                              ],
                              "properties": {
                                "document": {
                                  "$ref": "../Models/Products/Documents.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "GenerateDocumentRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "document": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CheckNumberNotFoundRsExample": {
                    "value": {
                      "code": "CHECKNUMBER_NOT_FOUND",
                      "message": "Imagen de cheque no encontrado"
                    }
                  },
                  "CheckImageNotFoundRsExample": {
                    "value": {
                      "code": "CHECKIMAGE_NOT_FOUND",
                      "message": "Imagen de cheque no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-check-image-http",
        "description": "Consulta de imágenes de cheques pagados",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "#/components/parameters/AccountNumberQ"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "checkNumber",
            "description": "Numero de cheque",
            "required": true
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "parameters": []
    },
    "/demandDeposits/delegation/{idCobis}": {
      "get": {
        "summary": "Consulta cuentas delegadas",
        "responses": {
          "200": {
            "description": "Consulta de delegaciones exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productType": {
                                    "$ref": "../Models/Products/ProductType.v1.yaml"
                                  },
                                  "productClass": {
                                    "$ref": "../Models/Products/ProductClass.v1.yaml"
                                  },
                                  "currency": {
                                    "$ref": "../Models/Products/Currency.v1.yaml"
                                  },
                                  "accountNumber": {
                                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                                  },
                                  "accountName": {
                                    "$ref": "../Models/Products/AccountName.v1.yaml"
                                  },
                                  "transactionRole": {
                                    "$ref": "../Models/Deposits/transactionRole.v1.yaml"
                                  },
                                  "delegatedIdCobis": {
                                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                                  },
                                  "delegatedCustomerName": {
                                    "$ref": "../Models/Customer/FullName.v1.yaml"
                                  },
                                  "status": {
                                    "$ref": "../Models/Products/Status.v1.yaml"
                                  },
                                  "branch": {
                                    "$ref": "../Models/Cobis/Branch.v1.yaml"
                                  },
                                  "originationDate": {
                                    "$ref": "../Models/Deposits/OriginationDate.v1.yaml"
                                  },
                                  "delegatedIdentificationType": {
                                    "$ref": "../Models/Customer/IdentificationType.v1.yaml"
                                  },
                                  "delegatedIdentificationNumber": {
                                    "$ref": "../Models/Customer/IdentificationNumber.v1.yaml"
                                  }
                                },
                                "required": [
                                  "productType",
                                  "productClass",
                                  "currency",
                                  "accountNumber",
                                  "accountName",
                                  "transactionRole",
                                  "delegatedIdCobis",
                                  "delegatedCustomerName"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "GetDelagationsRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "accounts": [
                          {
                            "productType": {
                              "code": 4,
                              "description": "CUENTA DE AHORROS"
                            },
                            "productClass": {
                              "code": "11",
                              "description": "AHORRO PLUS INT. S/M"
                            },
                            "currency": {
                              "code": 0,
                              "description": "QUETZAL"
                            },
                            "accountNumber": "3645770022",
                            "accountName": "Juan David Sandoval Cardona",
                            "transactionRole": "S",
                            "delegatedIdCobis": 36457734,
                            "delegatedCustomerName": "Pedro Luis Cordova Mendez",
                            "status": {
                              "code": "A",
                              "description": "ACTIVA"
                            },
                            "branch": {
                              "code": 1,
                              "name": "OFICINAS CENTRALES"
                            },
                            "originationDate": "2016-02-25"
                          },
                          {
                            "productType": {
                              "code": 3,
                              "description": "CUENTA MONETARIA"
                            },
                            "productClass": {
                              "code": "11",
                              "description": "CUENTA FÁCIL"
                            },
                            "currency": {
                              "code": 0,
                              "description": "QUETZAL"
                            },
                            "accountNumber": "3641270368",
                            "accountName": "Juan David Sandoval Cardona",
                            "transactionRole": "V",
                            "delegatedIdCobis": 36457712,
                            "delegatedCustomerName": "Diego Pablo Perez Martínez",
                            "status": {
                              "code": "A",
                              "description": "ACTIVA"
                            },
                            "branch": {
                              "code": 1,
                              "name": "OFICINAS CENTRALES"
                            },
                            "originationDate": "2018-02-05"
                          },
                          {
                            "productType": {
                              "code": 3,
                              "description": "CUENTA MONETARIA"
                            },
                            "productClass": {
                              "code": "11",
                              "description": "CUENTA FÁCIL"
                            },
                            "currency": {
                              "code": 0,
                              "description": "QUETZAL"
                            },
                            "accountNumber": "3641270368",
                            "accountName": "Juan David Sandoval Cardona",
                            "transactionRole": "N",
                            "delegatedIdCobis": 36457745,
                            "delegatedCustomerName": "Juan Pablo Rodriguez López",
                            "status": {
                              "code": "A",
                              "description": "ACTIVA"
                            },
                            "branch": {
                              "code": 1,
                              "name": "OFICINAS CENTRALES"
                            },
                            "originationDate": "2022-06-22",
                            "delegatedIdentificationType": "DPI",
                            "delegatedIdentificationNumber": "2221871020101"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cliente cobis no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Código de cliente cobis no existen"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-demantdeposit-delegations-http",
        "description": "Consulta las cuentas de un cliente cobis sobre las cuales se han concedido permisos delegados por Entitlement a otros clientes ",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ],
        "tags": [
          "Gestiones"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/idCobis"
        }
      ],
      "post": {
        "summary": "Crear Delegación",
        "operationId": "post-demanddeposits-delegation-http",
        "tags": [
          "Gestiones"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    }
                  ]
                },
                "examples": {
                  "SuccessRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account or delegated not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta no encontrada"
                    }
                  },
                  "CustomerNotFound": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Código de cliente cobis no existente"
                    }
                  },
                  "DelegatedCustomerNotFound": {
                    "value": {
                      "code": "DELEGATED_CUSTOMER_NOT_FOUND",
                      "message": "Código de cliente cobis delegado no existente"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthhorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "Cliente no cuenta permisos sobre la cuenta"
                    }
                  },
                  "InvalidStatusRsExample": {
                    "value": {
                      "code": "INVALID_STATUS",
                      "message": "La cuenta no se encuentra en estado válido para otorgar permisos"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "description": "Servicio para crear delegaciones de Entitlement para conceder permisos de una cuenta a un cliente cobis",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productTypeCode": {
                    "$ref": "../Models/Products/ProductTypeCode.v1.yaml"
                  },
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "delegatedIdCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "transactionRole": {
                    "$ref": "../Models/Deposits/transactionRole.v1.yaml"
                  }
                },
                "required": [
                  "productTypeCode",
                  "accountNumber",
                  "delegatedIdCobis",
                  "transactionRole"
                ]
              },
              "examples": {
                "CreateDelagtionRqExample": {
                  "value": {
                    "productTypeCode": 4,
                    "accountNumber": "3645770022",
                    "delegatedIdCobis": 1,
                    "transactionRole": "S"
                  }
                }
              }
            }
          },
          "description": "Datos de la delegación de cuenta"
        }
      },
      "put": {
        "summary": "Modificar Delegación",
        "operationId": "put-demanddeposits-delegation-http",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Response.v1.json"
                },
                "examples": {
                  "SuccesRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account or delegated idCobis not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta no encontrada"
                    }
                  },
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Código de cliente cobis no existente"
                    }
                  },
                  "CustomerDelegateNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_DELEGATED_NOT_FOUND",
                      "message": "Código de cliente cobis delegado no existente"
                    }
                  },
                  "DelegationNotFoundRsExample": {
                    "value": {
                      "code": "DELEGATION_NOT_FOUND",
                      "message": "Delegación de persmiso no existente"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRdExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "Cliente no cuenta permisos sobre la cuenta"
                    }
                  },
                  "InvalidStatusRsExample": {
                    "value": {
                      "code": "INVALID_STATUS",
                      "message": "La cuenta no se encuentra en estado válido para otorgar permisos"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "description": "Servicio para modificar delegaciones de Entitlement de una cuenta a un cliente cobis",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productTypeCode": {
                    "$ref": "../Models/Products/ProductTypeCode.v1.yaml"
                  },
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "delegatedIdCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "transactionRole": {
                    "$ref": "../Models/Deposits/transactionRole.v1.yaml"
                  }
                },
                "required": [
                  "productTypeCode",
                  "accountNumber",
                  "delegatedIdCobis",
                  "transactionRole"
                ]
              },
              "examples": {
                "EditDelegationRqExample": {
                  "value": {
                    "productTypeCode": 4,
                    "accountNumber": "3645770022",
                    "delegatedIdCobis": 1,
                    "transactionRole": "S"
                  }
                }
              }
            }
          },
          "description": "Datos de la delegación de cuenta"
        },
        "tags": [
          "Gestiones"
        ]
      },
      "delete": {
        "summary": "Eliminar delegación",
        "operationId": "delete-demanddeposits-delegation-http",
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Response.v1.json"
                },
                "examples": {
                  "SuccessRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account or delegated not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFound": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Código de cliente cobis no existente"
                    }
                  },
                  "DelegationNotFound": {
                    "value": {
                      "code": "DELEGATION_NOT_FOUND",
                      "message": "Delegación no existente"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthhorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "Cliente no cuenta permisos sobre la cuenta"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "description": "Servicio para eliminar delegaciones de Entitlement de una cuenta a un cliente cobis",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ],
        "tags": [
          "Gestiones"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productTypeCode": {
                    "$ref": "../Models/Products/ProductTypeCode.v1.yaml"
                  },
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "delegatedIdCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  }
                },
                "required": [
                  "productTypeCode",
                  "accountNumber",
                  "delegatedIdCobis"
                ]
              },
              "examples": {
                "DeleteDelegationRqExample": {
                  "value": {
                    "productTypeCode": 3,
                    "accountNumber": "3645770022",
                    "delegatedIdCobis": 1
                  }
                }
              }
            }
          },
          "description": "Datos de la delegación a eliminar"
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "api_key": {
        "name": "x-api-key",
        "type": "apiKey",
        "in": "header",
        "description": "API Key asignado para otorgar accesos a los distintos endpoints del API"
      }
    },
    "parameters": {
      "AccountNumber": {
        "name": "accountNumber",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "0078650033",
          "maxLength": 10,
          "minLength": 10
        },
        "description": "Numero de cuenta del producto"
      },
      "AccountType": {
        "name": "accountType",
        "in": "path",
        "schema": {
          "type": "integer",
          "enum": [
            3,
            4,
            7,
            20,
            0
          ],
          "example": 3
        },
        "description": "Producto de la cuenta",
        "required": true
      },
      "InitDate": {
        "name": "initDate",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "example": "2021-01-15",
          "format": "date"
        },
        "description": "Fecha inicial"
      },
      "EndDate": {
        "name": "endDate",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2021-01-30"
        },
        "description": "Fecha final"
      },
      "OffSet": {
        "name": "offSet",
        "in": "query",
        "required": true,
        "schema": {
          "type": "number",
          "minimum": 0
        },
        "description": "Número del registro desde el cual, a partir del siguiente se inicia el siguiente conjunto de resultados de la página"
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100,
          "example": 10,
          "default": 10
        },
        "description": "Cantidad de registros a retornar por pagina"
      },
      "AccountNumberQ": {
        "name": "accountNumber",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "example": "0078650033",
          "minLength": 10,
          "maxLength": 10
        },
        "description": "Numero de cuenta del producto"
      },
      "CheckNumber": {
        "name": "checkNumber",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 90302836
        },
        "description": "Numero de cheque a filtrar"
      },
      "CheckbookStatusCode": {
        "name": "checkbookStatusCode",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "E",
          "enum": [
            "C",
            "D",
            "E",
            "I",
            "M",
            "N",
            "O",
            "R",
            "S",
            "T",
            "X"
          ]
        },
        "description": "Estado de la chequera a filtrar"
      },
      "checkNumber": {
        "name": "checkNumber",
        "in": "path",
        "required": true,
        "schema": {
          "type": "number"
        },
        "description": "Numero de cheque"
      },
      "idCobis": {
        "name": "idCobis",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "Numero de cliente Cobis"
      },
      "Checkbook": {
        "name": "checkbook",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "example": 1
        },
        "description": "Número de Chequera"
      },
      "CheckStatusCode": {
        "name": "checkStatusCode",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "A",
            "B",
            "C",
            "D",
            "F",
            "I",
            "N",
            "O",
            "P",
            "R",
            "T",
            "U"
          ]
        },
        "description": "Código de estado del cheque"
      },
      "OperationList": {
        "name": "OperationList",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "424722004, 424722006"
        },
        "description": "Listado de números secuenciales de operaciones a filtrar, separados por coma"
      }
    },
    "responses": {
      "Uncontroller-Error": {
        "description": "Uncontroller error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "uncontrollerErrorRsExample": {
                "value": {
                  "code": "UNCONTROLLER_ERROR",
                  "message": "Mensaje generico según la excepcion"
                }
              }
            }
          }
        }
      },
      "Method-Not-Allowed": {
        "description": "Metodo no permitido",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "MethodNotAllowedRsExample": {
                "value": {
                  "code": "METHOD_NOT_ALLOWED",
                  "message": "Servicio no autorizado."
                }
              }
            }
          }
        }
      },
      "Service-Unavailable": {
        "description": "Servicio no disponible  ",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "ServicesUnavailableRsExample": {
                "value": {
                  "code": "SERVICE_UNAVAILABLE",
                  "message": "Servicio no disponible"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Uso no autorizado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "UnauthorizedRsExample": {
                "value": {
                  "code": "UNAUTHORIZED",
                  "message": "Uso no autorizado"
                }
              }
            }
          }
        }
      },
      "Insufficient-Founds": {
        "description": "Fondos insufficientes",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "InsuficientFoundsRsExample": {
                "value": {
                  "code": "INSUFFICIENT_FOUNDS",
                  "message": "Fondos insuficientes"
                }
              }
            }
          }
        }
      },
      "Resource-Not-Found": {
        "description": "Cliente, cuenta, funcionario, etc. no encontrado ",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "ResourceNotFoundRsExample": {
                "value": {
                  "code": "CUSTOMER_NOT_FOUND",
                  "message": "Cliente no encontrado"
                }
              },
              "AccountNotFoundRsExample": {
                "value": {
                  "code": "ACCOUNT_NOT_FOUND",
                  "message": "Cuenta no encontrada"
                }
              },
              "ClerkNotFoundRsExample": {
                "value": {
                  "code": "CLERCK_NOT_FOUND",
                  "message": "Funcionario no encontrado"
                }
              }
            }
          }
        }
      },
      "Not-Acceptable": {
        "description": "Mensaje el error de validación",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "NotAcceptableRsExample": {
                "value": {
                  "code": "NOT_ACCEPTABLE",
                  "message": "Mensaje el error de validación"
                }
              }
            }
          }
        }
      },
      "Processing-Error": {
        "description": "Error de procesamiento",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "ProccessingErrorRsExample": {
                "value": {
                  "code": "PROCESSING_ERROR",
                  "message": "Mensaje según error de procesamiento"
                }
              }
            }
          }
        }
      },
      "Resource-Is-Locked": {
        "description": "Cuenta bloqueada",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "AccountIsLockedRsExample": {
                "value": {
                  "code": "ACCOUNT_IS_LOCKED",
                  "message": "La cuenta está bloqueada"
                }
              },
              "AccountIsSeizedRsExample": {
                "value": {
                  "code": "ACCOUNT_IS_SEIZED",
                  "message": "La cuenta está embargada"
                }
              },
              "AccountIsNotActive": {
                "value": {
                  "code": "ACCOUNT_IS_NOT_ACTIVE",
                  "message": "La cuenta no está activa"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ACH"
    },
    {
      "name": "Bamavisa"
    },
    {
      "name": "Cheques"
    },
    {
      "name": "Consulta"
    },
    {
      "name": "Gestiones"
    },
    {
      "name": "Originación"
    },
    {
      "name": "Transacciones"
    }
  ]
}