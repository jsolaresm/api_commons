{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "zz5s2cvotttjm"
  },
  "info": {
    "title": "financialServices",
    "version": "1.0",
    "description": "API para gestion de sevicios financieron de divisas y contabilidad. ",
    "contact": {
      "name": "Rony Reyes",
      "email": "rony.reyes@bam.com.gt"
    },
    "license": {
      "name": "BAM"
    },
    "x-tags": {
      "bam:application-id": "rdct_api_composicion",
      "bam:component": "servicios-core",
      "bam:layer": "composicion",
      "bam:tecnical-domain": "financial services",
      "bam:sox-compliance": "si",
      "bam:billing-mode": "transversal",
      "bam:cost-center": "0",
      "bam:cost-center-project": "334",
      "bam:impact": "BIA",
      "bam:creator-user": "Rony Reyes - rony.reyes",
      "bam:creator-email": "rony.reyes@bam.com.gt"
    }
  },
  "servers": [
    {
      "url": "https://localhost:3000"
    }
  ],
  "paths": {
    "/financialServices/exchangeRate": {
      "get": {
        "summary": "Consulta de tasas de cambio",
        "tags": [
          "Divisas"
        ],
        "responses": {
          "200": {
            "description": "Consulta exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "exchangeRate": {
                              "type": "object",
                              "properties": {
                                "segment": {
                                  "$ref": "../Models/Customer/Segment.v1.yaml"
                                },
                                "general": {
                                  "type": "array",
                                  "description": "Tasas de cambio generales o segun segmento del cliente",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "currency": {
                                        "$ref": "../Models/Products/Currency.v1.yaml"
                                      },
                                      "type": {
                                        "$ref": "../Models/FinancialServices/TypeRate.v1.yaml"
                                      },
                                      "rate": {
                                        "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                                      },
                                      "maxAmount": {
                                        "$ref": "../Models/FinancialServices/MaxAmount.v1.yaml"
                                      }
                                    }
                                  }
                                },
                                "preAuthorized": {
                                  "type": "array",
                                  "description": "Tasa de cambio pre-autorizadas, aplica solamente cuando se consulta un cliente cobis especifico.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "currency": {
                                        "$ref": "../Models/Products/Currency.v1.yaml"
                                      },
                                      "type": {
                                        "$ref": "../Models/FinancialServices/TypeRate.v1.yaml"
                                      },
                                      "rate": {
                                        "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                                      },
                                      "minAmount": {
                                        "$ref": "../Models/FinancialServices/MinAmount.v1.yaml"
                                      },
                                      "maxAmount": {
                                        "$ref": "../Models/FinancialServices/MaxAmount.v1.yaml"
                                      },
                                      "sequential": {
                                        "$ref": "../Models/Transactions/Secuential.v1.yaml"
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "general"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "ExchangeRateRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "exchangeRate": {
                          "segment": {
                            "code": "3",
                            "description": "Potencial"
                          },
                          "general": [
                            {
                              "currency": {
                                "code": 0,
                                "description": "QUETZAL"
                              },
                              "type": "COMPRA",
                              "rate": 7.65434,
                              "maxAmount": 350000
                            },
                            {
                              "currency": {
                                "code": 0,
                                "description": "QUETZAL"
                              },
                              "type": "VENTA",
                              "rate": 7.87937,
                              "maxAmount": 350.65
                            }
                          ],
                          "preAuthorized": [
                            {
                              "currency": {
                                "code": 0,
                                "description": "QUETZAL"
                              },
                              "type": "VENTA",
                              "rate": 7.65434,
                              "minAmount": 100.65,
                              "maxAmount": 350.65,
                              "sequential": 424722004
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFountRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Código de cliente cobis no existente"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-exchange-rate-http",
        "description": "Recupera las tasas de cambio por moneda generales o por segumento o prenegociadas segun el codigo del cliente",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "in": "query",
            "name": "idCobis",
            "schema": {
              "type": "integer",
              "example": 343228
            },
            "description": "Numero de cliente Cobis"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Currency"
          },
          {
            "in": "header",
            "name": "Channel",
            "schema": {
              "type": "string"
            },
            "description": "Identificador numérico que identifica el canal que efectúo la operación"
          },
          {
            "in": "header",
            "name": "Branch",
            "description": "Identificador numérico que indica la agencia que consume el servicio",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Calcula conversión de moneda",
        "operationId": "calculate-currency-conversion-http",
        "responses": {
          "200": {
            "description": "Calculo Exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "currencyConversion": {
                              "type": "object",
                              "properties": {
                                "currencyAmount": {
                                  "$ref": "../Models/Products/Currency.v1.yaml"
                                },
                                "convertedAmount": {
                                  "$ref": "../Models/FinancialServices/ConvertedAmount.v1.yaml"
                                },
                                "type": {
                                  "$ref": "../Models/FinancialServices/TypeRate.v1.yaml"
                                },
                                "rate": {
                                  "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                                },
                                "sequentialPreAut": {
                                  "$ref": "../Models/FinancialServices/SequentialPreAut.v1.yaml"
                                },
                                "queryId": {
                                  "$ref": "../Models/FinancialServices/QueryIdExchangeRate.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "CalculateRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "currencyConversion": {
                          "currencyAmount": {
                            "code": 0,
                            "description": "QUETZAL"
                          },
                          "convertedAmount": 350.65,
                          "type": "VENTA",
                          "rate": 7.65434,
                          "sequentialPreAut": 442004,
                          "queryId": "10210520-b895-40ca-bce5-474f9643bf53"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFountRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Código de cliente cobis no existente"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "422": {
            "description": "Limites excedidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "ExceedConversionLimitsRsExample": {
                    "value": {
                      "code": "EXCEED_CONVERSION_LIMITS",
                      "message": "Excede los limites de conversión, requiere negociar tasa."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Calcula el monto de conversion de moneda segun moneda origen y destino",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "#/components/parameters/originCurrency"
          },
          {
            "$ref": "#/components/parameters/destinationCurrency"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "O",
                "D"
              ],
              "example": "O"
            },
            "in": "query",
            "name": "amountType",
            "description": "Indica si el monto corresponde a la moneda destino u origen",
            "required": true
          },
          {
            "schema": {
              "type": "number",
              "format": "double"
            },
            "in": "query",
            "name": "amount",
            "description": "Monto",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "previousQueryId",
            "description": "Id de consulta previa"
          },
          {
            "$ref": "#/components/parameters/idCobis"
          },
          {
            "$ref": "#/components/parameters/sequentialPreAut"
          },
          {
            "$ref": "#/components/parameters/rateType"
          },
          {
            "in": "header",
            "name": "Channel",
            "schema": {
              "type": "string"
            },
            "description": "Identificador numérico que identifica el canal que efectúo la operación"
          },
          {
            "in": "header",
            "name": "Branch",
            "schema": {
              "type": "string"
            },
            "description": "Identificador numérico que indica la agencia que consume el servicio"
          }
        ],
        "tags": [
          "Divisas"
        ]
      }
    },
    "/financialServices/wireTransfer/commission": {
      "post": {
        "summary": "Comisión para Transferencias Internacionales",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "comissionCost": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "$ref": "../Models/FinancialServices/CostCode.v1.yaml"
                                    },
                                    "description": {
                                      "$ref": "../Models/FinancialServices/CostName.v1.yaml"
                                    },
                                    "commission": {
                                      "$ref": "../Models/CreditCard/Amount.v1.yaml"
                                    },
                                    "exception": {
                                      "$ref": "../Models/FinancialServices/CostRemovable.v1.yaml"
                                    },
                                    "customerType": {
                                      "$ref": "../Models/Customer/CustomerType.yaml"
                                    },
                                    "firm": {
                                      "$ref": "../Models/Customer/Firm.v1.yaml"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CostNotFoundRsExample": {
                    "value": {
                      "code": "COST_NOT_FOUND",
                      "message": "Rubro de costos no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "wire-transfer-commission-http",
        "description": "Consulta de comisión por envio de transferencia internacional",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "accountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "currency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "paymentType": {
                    "$ref": "../Models/FinancialServices/FeePaymentType.v1.yaml"
                  },
                  "transferAmount": {
                    "$ref": "../Models/FinancialServices/TransferAmount.v1.yaml"
                  }
                }
              },
              "examples": {
                "WireTransferSenderCommissionRqExample": {
                  "value": {
                    "accountType": 3,
                    "accountNumber": "3645770022",
                    "currency": 1,
                    "paymentType": "SENDER",
                    "transferAmount": 2000
                  }
                },
                "WireTransferBeneficiaryCommissionRqExample": {
                  "value": {
                    "accountType": 3,
                    "accountNumber": "3645770022",
                    "currency": 1,
                    "paymentType": "BENEFICIARY",
                    "transferAmount": 2000
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transferencias Internacionales"
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ]
      },
      "parameters": []
    },
    "/financialServices/wireTransfer": {
      "post": {
        "summary": "Solicitud de Transferencia Internacional",
        "responses": {
          "200": {
            "description": "Operación Exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "wireTransfer": {
                                  "type": "object",
                                  "properties": {
                                    "referenceNumber": {
                                      "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                    },
                                    "transferType": {
                                      "$ref": "../Models/FinancialServices/TransferType.v1.yaml"
                                    },
                                    "exchangeRate": {
                                      "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "WireTransferRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación Exitosa",
                      "data": {
                        "result": {
                          "wireTransfer": {
                            "referenceNumber": "1064052816512",
                            "transferType": "PRIVADA",
                            "exchangeRate": 7.65434
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Fondos insuficientes  ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "InsufficientFundsRsExample": {
                    "value": {
                      "code": "INSUFFICIENT_FUNDS",
                      "message": "Fondos insuficientes para realizar la operación"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "StatusInvalidRsExample": {
                    "value": {
                      "code": "STATUS_INVALID",
                      "message": "Estado de producto invalido"
                    }
                  },
                  "InvalidPreaAutRsExample": {
                    "value": {
                      "code": "INVALID_PREAUT_STATUS",
                      "message": "La preautorización no se encuentra en un estado válido"
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Locked (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountLockedRsExample": {
                    "value": {
                      "code": "ACCOUNT_IS_LOCKED",
                      "message": "La cuenta está bloqueada"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "wire-transfer-request-http",
        "description": "Realiza la solicitud de un envío de transferencia internacional con débito a cuenta considerando moneda cruzada",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "object",
                    "description": "Datos de la operación de transferencia",
                    "properties": {
                      "amount": {
                        "$ref": "../Models/CreditCard/Amount.v1.yaml"
                      },
                      "commissionType": {
                        "$ref": "../Models/FinancialServices/CommissionType.v1.yaml"
                      },
                      "originAccount": {
                        "type": "object",
                        "description": "Datos de la cuenta origen",
                        "required": [
                          "type",
                          "number"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "../Models/Products/AccountTypeCode.yaml"
                          },
                          "number": {
                            "$ref": "../Models/Products/AccountNumber.v1.yaml"
                          }
                        }
                      },
                      "currency": {
                        "$ref": "../Models/Products/CurrencyCode.yaml"
                      },
                      "sequentialPreAut": {
                        "$ref": "../Models/FinancialServices/SequentialPreAut.v1.yaml"
                      },
                      "exchangeRate": {
                        "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                      },
                      "observations": {
                        "$ref": "../Models/Transactions/TransferDescription.v1.yaml"
                      }
                    },
                    "required": [
                      "amount",
                      "originAccount",
                      "currency"
                    ]
                  },
                  "beneficiary": {
                    "type": "object",
                    "description": "Datos del beneficiario de la transferencia",
                    "required": [
                      "type",
                      "senderRelationship",
                      "address"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "../Models/Customer/CustomerType.yaml"
                      },
                      "naturalPerson": {
                        "type": "object",
                        "description": "Datos del beneficiario si es persona natural",
                        "properties": {
                          "firstName": {
                            "$ref": "../Models/Customer/Name.v1.yaml"
                          },
                          "otherName": {
                            "$ref": "../Models/Customer/OtherName.v1.yaml"
                          },
                          "lastName": {
                            "$ref": "../Models/Customer/LastName.v1.yaml"
                          },
                          "otherLastName": {
                            "$ref": "../Models/Customer/OtherLastName.v1.yaml"
                          },
                          "marriedName": {
                            "$ref": "../Models/Customer/MarriedName.v1.yaml"
                          },
                          "fullName": {
                            "$ref": "../Models/Customer/FullName.v1.yaml"
                          }
                        },
                        "required": [
                          "firstName",
                          "lastName",
                          "fullName"
                        ]
                      },
                      "company": {
                        "type": "object",
                        "description": "Datos del beneficiario si es de tipo companía",
                        "properties": {
                          "commercialName": {
                            "$ref": "../Models/Customer/CommercialName.v1.yaml"
                          }
                        }
                      },
                      "destinationAccountNumber": {
                        "$ref": "../Models/FinancialServices/AccountNumberSwift.yaml"
                      },
                      "senderRelationship": {
                        "$ref": "../Models/FinancialServices/Relationship.v1.yaml"
                      },
                      "senderRelationshipOther": {
                        "$ref": "../Models/FinancialServices/RelationshipOther.yaml"
                      },
                      "address": {
                        "$ref": "../Models/Cobis/Address.v1.yaml"
                      }
                    }
                  },
                  "intermediaryBank": {
                    "type": "object",
                    "description": "Datos del Banco Intermediario",
                    "properties": {
                      "type": {
                        "$ref": "../Models/FinancialServices/BankCodeType.v1.yaml"
                      },
                      "code": {
                        "$ref": "../Models/FinancialServices/BankCode.v1.yaml"
                      },
                      "name": {
                        "$ref": "../Models/FinancialServices/BankName.v1.yaml"
                      },
                      "address": {
                        "$ref": "../Models/FinancialServices/AddressBank.v1.yaml"
                      },
                      "account": {
                        "$ref": "../Models/FinancialServices/AccountNumberSwift.yaml"
                      }
                    },
                    "required": [
                      "type",
                      "code",
                      "name",
                      "address"
                    ]
                  },
                  "payingBank": {
                    "type": "object",
                    "description": "Datos del banco pagador",
                    "required": [
                      "type",
                      "code",
                      "address",
                      "name"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "../Models/FinancialServices/BankCodeType.v1.yaml"
                      },
                      "code": {
                        "$ref": "../Models/FinancialServices/BankCode.v1.yaml"
                      },
                      "address": {
                        "$ref": "../Models/FinancialServices/AddressBank.v1.yaml"
                      },
                      "name": {
                        "$ref": "../Models/FinancialServices/BankName.v1.yaml"
                      }
                    }
                  },
                  "references": {
                    "type": "object",
                    "description": "Referencias de la operación",
                    "required": [
                      "entityType",
                      "originFundsCode",
                      "egressReasonCode"
                    ],
                    "properties": {
                      "entityType": {
                        "$ref": "../Models/FinancialServices/EntityType.v1.yaml"
                      },
                      "originFundsCode": {
                        "$ref": "../Models/FinancialServices/OriginFundsCode.v1.yaml"
                      },
                      "egressReasonCode": {
                        "$ref": "../Models/FinancialServices/EgressReasonCode.v1.yaml"
                      },
                      "egressReasonOthers": {
                        "$ref": "../Models/FinancialServices/EgressOtherReason.v1.yaml"
                      }
                    }
                  }
                },
                "required": [
                  "beneficiary",
                  "payingBank",
                  "references"
                ]
              },
              "examples": {
                "WireTransferRqPNExample": {
                  "value": {
                    "operation": {
                      "amount": 125.5,
                      "commissionType": 1,
                      "originAccount": {
                        "type": 4,
                        "number": "3645770022"
                      },
                      "currency": 0,
                      "sequentialPreAut": 424722004,
                      "exchangeRate": 7.65434,
                      "observations": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE"
                    },
                    "beneficiary": {
                      "type": {
                        "code": "P",
                        "description": "Persona Individual"
                      },
                      "naturalPerson": {
                        "firstName": "CARLOS",
                        "otherName": "FRANCISCO",
                        "lastName": "LOPEZ",
                        "otherLastName": "PEREZ",
                        "marriedName": "",
                        "fullName": "CARLOS FRANCISCO LOPEZ PEREZ"
                      },
                      "destinationAccountNumber": "3645770022",
                      "senderRelationship": {
                        "code": 3,
                        "description": "FAMILIAR"
                      },
                      "address": {
                        "country": {
                          "code": 1,
                          "name": "ESTADOS UNIDOS DE AMERICA"
                        },
                        "state": {
                          "code": 1,
                          "name": "NEW YORK"
                        },
                        "city": {
                          "code": 1,
                          "name": "NEW YORK CITY"
                        },
                        "description": "DIRECCION DEL BENEFICIARIO"
                      }
                    },
                    "intermediaryBank": {
                      "type": "SWIFT",
                      "code": "CITIUS33",
                      "name": "CITIBANK N.A.",
                      "address": "12345 NY@NY",
                      "account": "3645770022"
                    },
                    "payingBank": {
                      "type": "SWIFT",
                      "code": "CITIUS33",
                      "address": "12345 NY@NY",
                      "name": "CITIBANK N.A."
                    },
                    "references": {
                      "entityType": "PR",
                      "originFundsCode": "1.1.1",
                      "egressReasonCode": "125",
                      "egressOthersReason": "VACACIONES"
                    }
                  }
                },
                "WireTransferRqCompanyExample": {
                  "value": {
                    "operation": {
                      "amount": 125.5,
                      "commissionType": 1,
                      "originAccount": {
                        "type": 4,
                        "number": "3645770022"
                      },
                      "currency": 0,
                      "sequentialPreAut": 424722004,
                      "exchangeRate": 7.65434,
                      "observations": "A la cuenta No. ******6539 JUAN PEREZ, MATIAS JOSE"
                    },
                    "beneficiary": {
                      "type": {
                        "code": "C",
                        "description": "Persona Juridica"
                      },
                      "company": {
                        "commercialName": "MOTORS COMPANY, INC"
                      },
                      "destinationAccountNumber": "3645770022",
                      "senderRelationship": {
                        "code": 2,
                        "description": "PROVEEDOR"
                      },
                      "address": {
                        "country": {
                          "code": 1,
                          "name": "ESTADOS UNIDOS DE AMERICA"
                        },
                        "state": {
                          "code": 1,
                          "name": "NEW YORK"
                        },
                        "city": {
                          "code": 1,
                          "name": "NEW YORK CITY"
                        },
                        "description": "22 ST FINAL"
                      }
                    },
                    "intermediaryBank": {
                      "type": "SWIFT",
                      "code": "CITIUS33",
                      "name": "CITIBANK N.A.",
                      "address": "12345 NY@NEW YORK",
                      "account": "3645770022"
                    },
                    "payingBank": {
                      "type": "SWIFT",
                      "code": "CITIUS33",
                      "address": "12345 NY@NEW YORK",
                      "name": "CITIBANK N.A."
                    },
                    "references": {
                      "entityType": "PR",
                      "originFundsCode": "1.1.1",
                      "egressReasonCode": "125",
                      "egressOthersReason": "VACACIONES"
                    }
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "tags": [
          "Transferencias Internacionales"
        ]
      },
      "parameters": []
    },
    "/financialServices/sales/account": {
      "post": {
        "summary": "Ventas digitales - Creación de cuentas y Tarjeta de debito",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "accountNumber"
                              ],
                              "properties": {
                                "accountNumber": {
                                  "$ref": "../Models/Products/AccountNumber.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "CreateProductRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "accountNumber": "3645770022"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CreatedNotAuthorizedRsExample": {
                    "value": {
                      "code": "NOT_AUTHORIZED",
                      "message": "Ejecución no autorizada"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerStateInvalidRsExample": {
                    "value": {
                      "code": "CUSTOMER_STATE_INVALID",
                      "message": "Cliente en estado invalido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "sales-account-http",
        "description": "Proceso de orquestación creación de cuentas y activación de servicios",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "object",
                    "required": [
                      "code",
                      "metadata"
                    ],
                    "properties": {
                      "code": {
                        "$ref": "../Models/Security/OTP.v1.yaml"
                      },
                      "metadata": {
                        "type": "object"
                      }
                    }
                  },
                  "customer": {
                    "type": "object",
                    "description": "Seccion general para identificar a cliente cobis",
                    "required": [
                      "idCobis"
                    ],
                    "properties": {
                      "idCobis": {
                        "$ref": "../Models/Customer/idCobis.v1.yaml"
                      }
                    }
                  },
                  "contactability": {
                    "type": "object",
                    "description": "Seccion general para crear esquemas de contactabilidad",
                    "required": [
                      "country",
                      "address",
                      "phone"
                    ],
                    "properties": {
                      "country": {
                        "$ref": "../Models/Cobis/CountryCode.v1.yaml"
                      },
                      "address": {
                        "type": "object",
                        "description": "Seccion para identificar direcciones de cliente\n\nSi cliente posee una dirección enviar AddressId, excluyendo parametros de creación de dirección, si cliente desea crear una dirección no enviar dato addressId",
                        "properties": {
                          "city": {
                            "$ref": "../Models/Cobis/CityCode.v1.yaml"
                          },
                          "sector": {
                            "$ref": "../Models/Customer/SectorCode.v1.yaml"
                          },
                          "state": {
                            "$ref": "../Models/Cobis/StateCode.v1.yaml"
                          },
                          "principal": {
                            "$ref": "../Models/Cobis/PrincipalAddress.v1.yaml"
                          },
                          "addressDescription": {
                            "$ref": "../Models/Cobis/AddressDescription.v1.yaml"
                          },
                          "zone": {
                            "$ref": "../Models/Cobis/Zone.v1.yaml"
                          },
                          "addressType": {
                            "$ref": "../Models/Cobis/AddressType.v1.yaml"
                          },
                          "addressId": {
                            "$ref": "../Models/Cobis/AddressId.v1.yaml"
                          }
                        }
                      },
                      "phone": {
                        "type": "object",
                        "description": "Seccion para identificar direcciones de cliente\n\nSi cliente posee una dirección enviar PhoneId, excluyendo parametros de creación de dirección, si cliente desea crear una dirección no enviar dato PhoneId",
                        "properties": {
                          "phoneType": {
                            "$ref": "../Models/Customer/PhoneTypeCode.v1.yaml"
                          },
                          "phoneNumber": {
                            "$ref": "../Models/Customer/PhoneNumber.v1.yaml"
                          },
                          "areaCode": {
                            "$ref": "../Models/Cobis/AreaCode.v2.yaml"
                          },
                          "phoneId": {
                            "$ref": "../Models/Customer/PhoneId.v1.yaml"
                          }
                        }
                      }
                    }
                  },
                  "product": {
                    "type": "object",
                    "description": "Seccion general para crear productos del cliente",
                    "required": [
                      "ProductType",
                      "ProductClass",
                      "currency",
                      "checkbook",
                      "mailStatement",
                      "monthlyAverage",
                      "foundSource",
                      "Beneficiaries",
                      "notification",
                      "card"
                    ],
                    "properties": {
                      "ProductType": {
                        "$ref": "../Models/Products/ProductTypeCode.v1.yaml"
                      },
                      "ProductClass": {
                        "$ref": "../Models/FinancialServices/ProductClassCode.v1.yaml"
                      },
                      "currency": {
                        "$ref": "../Models/Products/CurrencyCode.yaml"
                      },
                      "checkbook": {
                        "$ref": "../Models/Products/Checkbook.v1.yaml"
                      },
                      "mailStatement": {
                        "$ref": "../Models/Deposits/mailStatement.v1.yaml"
                      },
                      "monthlyAverage": {
                        "$ref": "../Models/Deposits/MonthlyAverage.v1.yaml"
                      },
                      "foundSource": {
                        "$ref": "../Models/Deposits/FoundSourceCode.v1.yaml"
                      },
                      "Beneficiaries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Seccion de beneficiarios cuentas",
                          "properties": {
                            "fullName": {
                              "$ref": "../Models/Transactions/BeneficiaryName.yaml"
                            },
                            "fullAddress": {
                              "$ref": "../Models/Deposits/Beneficiary/BeneficiaryAddress.v1.yaml"
                            },
                            "percentage": {
                              "$ref": "../Models/Deposits/Beneficiary/BeneficiaryPercentage.v1.yaml"
                            },
                            "relationship": {
                              "$ref": "../Models/Deposits/Beneficiary/BeneficiaryRelationship.v1.yaml"
                            }
                          },
                          "required": [
                            "fullName",
                            "fullAddress",
                            "percentage",
                            "relationship"
                          ]
                        }
                      },
                      "notification": {
                        "type": "object",
                        "required": [
                          "billing"
                        ],
                        "properties": {
                          "billing": {
                            "type": "object",
                            "required": [
                              "feeType",
                              "availableAmount"
                            ],
                            "properties": {
                              "feeType": {
                                "$ref": "../Models/Products/FeeType.v1.yaml"
                              },
                              "availableAmount": {
                                "$ref": "../Models/Deposits/availableAmount.v1.yaml"
                              }
                            }
                          }
                        }
                      },
                      "card": {
                        "type": "object",
                        "description": "Sección para creación de tarjeta de créditos",
                        "required": [
                          "cardType",
                          "currency",
                          "cardCost",
                          "designCode",
                          "insurance",
                          "plan",
                          "delivery"
                        ],
                        "properties": {
                          "cardType": {
                            "$ref": "../Models/DebitCard/CardTypeCode.v1.yaml"
                          },
                          "currency": {
                            "$ref": "../Models/Products/CurrencyCode.yaml"
                          },
                          "cardCost": {
                            "$ref": "../Models/DebitCard/CardCost.v1.yaml"
                          },
                          "designCode": {
                            "$ref": "../Models/DebitCard/DesignCode.v1.yaml"
                          },
                          "insurance": {
                            "$ref": "../Models/Products/InsuranceDebitCard.v1.yaml"
                          },
                          "plan": {
                            "$ref": "../Models/DebitCard/CardPlanCode.v1.yaml"
                          },
                          "delivery": {
                            "type": "object",
                            "description": "Seccion de tipo de entre",
                            "required": [
                              "deliveryType"
                            ],
                            "properties": {
                              "deliveryType": {
                                "$ref": "../Models/DebitCard/DeliveryType.v1.yaml"
                              },
                              "preferenceBranch": {
                                "$ref": "../Models/Cobis/BranchCode.yaml"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "otp",
                  "customer",
                  "contactability",
                  "product"
                ]
              },
              "examples": {
                "ActivateAccountOrchestrationRqExample": {
                  "value": {
                    "otp": {
                      "code": "123456",
                      "metadata": {}
                    },
                    "customer": {
                      "idCobis": 205817
                    },
                    "contactability": {
                      "country": "1",
                      "address": {
                        "city": "1",
                        "sector": "1",
                        "state": "1",
                        "principal": "S",
                        "addressDescription": "119 CALLE FINAL ",
                        "zone": "10",
                        "addressType": "CO",
                        "addressId": 1
                      },
                      "phone": {
                        "phoneType": "C",
                        "phoneNumber": "30675565",
                        "areaCode": 502,
                        "phoneId": 123
                      }
                    },
                    "product": {
                      "ProductType": 20,
                      "ProductClass": "S",
                      "currency": 0,
                      "checkbook": "N",
                      "mailStatement": "S",
                      "monthlyAverage": 60000,
                      "foundSource": "11",
                      "Beneficiaries": [
                        {
                          "fullName": "Javier Perez",
                          "fullAddress": "4TA CALLE ZONA 10 MIXCO GUATEMALA",
                          "percentage": 100,
                          "relationship": {
                            "code": "001",
                            "description": "PADRE"
                          }
                        }
                      ],
                      "notification": {
                        "billing": {
                          "feeType": "PAR",
                          "availableAmount": "S"
                        }
                      },
                      "card": {
                        "cardType": "12345",
                        "currency": 0,
                        "cardCost": "SINC",
                        "designCode": 782,
                        "insurance": "S",
                        "plan": 17,
                        "delivery": {
                          "deliveryType": "A",
                          "preferenceBranch": 156
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para la generación de servicio en orquestación de creación de cuentas"
        },
        "tags": [
          "Ventas"
        ]
      },
      "parameters": []
    },
    "/financialServices/sales/offer": {
      "parameters": [],
      "get": {
        "summary": "Consulta oferta comercial",
        "responses": {
          "200": {
            "description": "Proceso de ejecución exitosa ",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "results": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "offerId": {
                                    "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                                  },
                                  "idCobis": {
                                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                                  },
                                  "offerType": {
                                    "$ref": "../Models/FinancialServices/OfferType.v1.yaml"
                                  },
                                  "amount": {
                                    "$ref": "../Models/FinancialServices/AmountOffer.v1.yaml"
                                  },
                                  "currency": {
                                    "$ref": "../Models/Products/Currency.v1.yaml"
                                  },
                                  "priority": {
                                    "$ref": "../Models/FinancialServices/Priority.v1.yaml"
                                  },
                                  "terms": {
                                    "$ref": "../Models/FinancialServices/Terms.v1.yaml"
                                  },
                                  "specialTerms": {
                                    "$ref": "../Models/FinancialServices/EspecialTerms.v1.yaml"
                                  },
                                  "stateOffer": {
                                    "$ref": "../Models/FinancialServices/StateOffer.v1.yaml"
                                  },
                                  "dueDate": {
                                    "$ref": "../Models/FinancialServices/ExpirationDate.v1.yaml"
                                  }
                                },
                                "required": [
                                  "offerId",
                                  "idCobis",
                                  "offerType",
                                  "amount",
                                  "currency",
                                  "terms"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "EjemploEjecuciónExitosa": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "results": [
                          {
                            "offerId": "a18cred001",
                            "idCobis": 1,
                            "offerType": {
                              "offerTypeCode": "A",
                              "description": "ExtraMileanial",
                              "product": "Tarjeta de crédito",
                              "productClass": "Extrafinanciamiento",
                              "schemeAccepted": true,
                              "active": true
                            },
                            "amount": 350.65,
                            "currency": {
                              "code": 0,
                              "description": "QUETZAL"
                            },
                            "priority": 1,
                            "terms": "json",
                            "specialTerms": "Cuotas Gratis",
                            "stateOffer": {
                              "codeState": "V",
                              "descriptionState": "Vigente"
                            },
                            "dueDate": "2023-02-15"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "get-offer-http",
        "description": "consulta de oferta comercial relacionada con cliente cobis",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/idCobis"
          }
        ],
        "tags": [
          "Ventas"
        ]
      },
      "put": {
        "summary": "Actualiza oferta comercial",
        "operationId": "update-offer-http",
        "responses": {
          "200": {
            "description": "Proceso de ejecución exitosa ",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "result": {
                                  "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "EjemploEjecucion200": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "result": "1064052816512"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Actualización de oferta comercial relacionada a cliente cobis y a filtros adicionales\n\n- Actualiza estado de oferta comercial\n- Actualiza razon de rechazo de oferta comercial\n- Actualiza fecha de pospuesta de oferta comercial",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "#/components/parameters/idCobis"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operationType": {
                    "$ref": "../Models/FinancialServices/operationType.v1.yaml"
                  },
                  "offerId": {
                    "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                  },
                  "stateOfferCode": {
                    "$ref": "../Models/FinancialServices/stateOfferCode.yaml"
                  },
                  "rejectionReason": {
                    "$ref": "../Models/FinancialServices/RejectionReason.v1.yaml"
                  },
                  "postponedDate": {
                    "$ref": "../Models/FinancialServices/PostponedDate.v1.yaml"
                  }
                },
                "required": [
                  "operationType",
                  "offerId",
                  "stateOfferCode"
                ]
              },
              "examples": {
                "ej-update-estado": {
                  "value": {
                    "operationType": "e",
                    "offerId": "123456",
                    "stateOfferCode": "V",
                    "rejectionReason": 1,
                    "postponedDate": "2023-02-15"
                  }
                },
                "ej-update-motivo": {
                  "value": {
                    "operationType": "m",
                    "offerId": "123456",
                    "stateOfferCode": "R",
                    "rejectionReason": 1,
                    "postponedDate": "2023-02-15"
                  }
                },
                "ej-update-fecha": {
                  "value": {
                    "operationType": "f",
                    "offerId": "123456",
                    "stateOfferCode": "S",
                    "rejectionReason": 1,
                    "postponedDate": "2023-02-15"
                  }
                }
              }
            }
          },
          "description": "Parametros asociados que se envian a backend por medio de verbo http"
        },
        "tags": [
          "Ventas"
        ]
      },
      "post": {
        "summary": "Registra oferta comercial",
        "tags": [
          "Ventas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "uuidOffer"
                              ],
                              "properties": {
                                "uuidOffer": {
                                  "$ref": "../Models/FinancialServices/uuid.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "RegisteredOfferRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "uuidOffer": "936bae7c-bfec-11eb-8529-0242ac130003"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "register-offer-http",
        "description": "Registra oferta comercial",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "uuid": "936bae7c-bfec-11eb-8529-0242ac130003",
                    "idCobis": 2251123,
                    "offerType": "MAX_VISA",
                    "amount": 234.123,
                    "currency": 0,
                    "priority": 1,
                    "terms": "{\"conditions\": [{\"Cupo\": 40234, \"Tasa\": 20.5, \"Cuota\": 2057.54, \"Plazo\": 24}, {\"Cupo\": 54531, \"Tasa\": 20.5, \"Cuota\": 2040.51, \"Plazo\": 36}, {\"Cupo\": 65964, \"Tasa\": 20.5, \"Cuota\": 2071.64, \"Plazo\": 48}, {\"Cupo\": 75108, \"Tasa\": 20.5, \"Cuota\": 2064.04, \"Plazo\": 60}]}",
                    "especialTerms": "Cuotas Gratis",
                    "expirationDate": "2023-02-15"
                  }
                },
                "properties": {
                  "idCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "offerType": {
                    "$ref": "../Models/FinancialServices/OfferTypeCode.v1.yaml"
                  },
                  "amount": {
                    "$ref": "../Models/FinancialServices/AmountOffer.v1.yaml"
                  },
                  "currency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "priority": {
                    "$ref": "../Models/FinancialServices/Priority.v1.yaml"
                  },
                  "terms": {
                    "$ref": "../Models/FinancialServices/Terms.v1.yaml"
                  },
                  "especialTerms": {
                    "$ref": "../Models/FinancialServices/EspecialTerms.v1.yaml"
                  },
                  "expirationDate": {
                    "$ref": "../Models/CreditCard/ExpirationDate.v1.yaml"
                  },
                  "offeredChannel": {
                    "type": "array",
                    "items": {
                      "$ref": "../Models/FinancialServices/Channel.v1.yaml"
                    }
                  }
                },
                "required": [
                  "idCobis",
                  "offerType",
                  "amount",
                  "currency",
                  "priority",
                  "terms",
                  "expirationDate",
                  "offeredChannel"
                ]
              },
              "examples": {
                "RegisteredOfferRqExample": {
                  "value": {
                    "idCobis": 1,
                    "offerType": "string",
                    "amount": 2000,
                    "currency": 0,
                    "priority": 1,
                    "terms": "{\"conditions\": [{\"Cupo\": 40234, \"Tasa\": 20.5, \"Cuota\": 2057.54, \"Plazo\": 24}, {\"Cupo\": 54531, \"Tasa\": 20.5, \"Cuota\": 2040.51, \"Plazo\": 36}, {\"Cupo\": 65964, \"Tasa\": 20.5, \"Cuota\": 2071.64, \"Plazo\": 48}, {\"Cupo\": 75108, \"Tasa\": 20.5, \"Cuota\": 2064.04, \"Plazo\": 60}]}",
                    "especialTerms": "Cuotas Gratis",
                    "expirationDate": "2023-02-15",
                    "offeredChannel": [
                      "SVP"
                    ]
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para registro de oferta comercial"
        }
      }
    },
    "/financialServices/wireTransfer/mt103": {
      "post": {
        "summary": "Comprobante mt103",
        "tags": [
          "Transferencias Internacionales"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "messageSwift": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "messageSwift"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "MT103RsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "messageSwift": "\n\n\n\n\n04/10/21-12:22:37 AGROenviados-0058-000001 1\n_______________________________________________________________________________\n--------------------- Instance Type and Transmission -------------- \nNotification (Transmission) of Original sent to SWIFT (ACK)\nNetwork Delivery Status : Network Ack \nPriority/Delivery : Normal\nMessage Input\nReference : 1222 211004AGROGTGCAXXX5703883348\n--------------------------- Message Header ------------------------- \nSwift Input : FIN 103 Single\nCustomer Credt Transfer\nSender : AGROGTGCXXX \nBANCO AGROMERCANTIL DE GUATEMALA, S.A.\nGUATEMALA GT\nReceiver : PNBPUS3NNYC\nWELLS FARGO BANK,\nN.A.\n(NEW YORK INTERNATIONAL BRANCH)\nNEW YORK,NY US\nSLA ID : 001\nUETR : 3ac0d708-8b11-4cad-87fe-863643ad288e\n---------------------------\nMessage Text --------------------------- \n20: Sender's Reference\nTRE09321065691\n23B: Bank Operation Code\nCRED\n32A: Val Dte/Curr/Interbnk Settld Amt\nDate : 04 October 2021\nCurrency : USD (US DOLLAR)\nAmount : #4000,00#\n50K: Ordering Customer-Name &amp; Address\n/3510727606\nALVARO HERNAN MEJIA ARIAS\n7 AVE 7-30 ZONA 09 , GUATEMALA\nUID\n2873380 GUATEMALA CA\n53A: Sender's Correspondent - FI BIC\n/2000192001177\nPNBPUS3NNYC\nWELLS FARGO BANK, N.A.\n(NEW YORK INTERNATIONAL\nBRANCH)\nNEW YORK,NY US\n57A: Account With Institution - FI BIC\nCAFEPAPA\nBANCO DAVIVIENDA (PANAMA), S.A.\nPANAMA PA\n59: Beneficiary\nCustomer-Name &amp; Addr\n/10041000308\nALVARO HERNAN MEJIA ARIAS\nCALLE 73 ESTE PH JOY 10A SAN FRANCI\n71A: Details of Charges\nOUR\n--------------------------- Message Trailer ------------------------ \n{CHK:482DD5EBB746}\nPKI Signature: MAC-Equivalent\n---------------------------- Interventions ------------------------- \nCategory : Network Report\nCreation Time : 04/10/21 12:22:09\nApplication : SWIFT Interface\nOperator : SYSTEM\nText\n{1:F21AGROGTGCAXXX5703883348}{4:{177:2110041222}{451:0}}"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "MessageNotFoundRsExample": {
                    "value": {
                      "code": "SWIFT_NOT_FOUND",
                      "message": "Mensaje SWIFT no encontrado"
                    }
                  },
                  "WireTransferNotFoundRsExample": {
                    "value": {
                      "code": "WIRE_TRANSFER_NOT_FOUND",
                      "message": "No se encontró el numero de referencia de la transferencia internacional"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "download-mt103-http",
        "description": "Realizar la descarga del comprobante de una transferencia internacional en formato mt103",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "referenceSB": {
                    "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                  }
                },
                "required": [
                  "referenceSB"
                ]
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/financialServices/wireTransfer/dc38": {
      "post": {
        "summary": "Comprobante DC38",
        "tags": [
          "Transferencias Internacionales"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "customerName": {
                              "$ref": "../Models/Customer/FullName.v1.yaml"
                            },
                            "taxId": {
                              "$ref": "../Models/Customer/TaxIdentification.v1.yaml"
                            },
                            "address": {
                              "$ref": "../Models/Cobis/AddressDescription.v1.yaml"
                            },
                            "phone": {
                              "$ref": "../Models/Customer/PhoneNumber.v1.yaml"
                            },
                            "phoneCode": {
                              "$ref": "../Models/Customer/PhoneCountryCode.v1.yaml"
                            },
                            "email": {
                              "$ref": "../Models/Cobis/Email.v1.yaml"
                            },
                            "entityType": {
                              "$ref": "../Models/FinancialServices/EntityType.v1.yaml"
                            },
                            "foreignCurrency": {
                              "$ref": "../Models/Products/Currency.v1.yaml"
                            },
                            "foreignCurrencyAmount": {
                              "$ref": "../Models/CreditCard/Amount.v1.yaml"
                            },
                            "usdAmount": {
                              "$ref": "../Models/CreditCard/Amount.v1.yaml"
                            },
                            "gtqAmount": {
                              "$ref": "../Models/CreditCard/Amount.v1.yaml"
                            },
                            "destinationCountry": {
                              "$ref": "../Models/EasyCash/Country.v1.yaml"
                            },
                            "exchangeRate": {
                              "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                            },
                            "beneficiaryName": {
                              "$ref": "../Models/EasyCash/BeneficiaryName.v1.yaml"
                            },
                            "paymentType": {
                              "$ref": "../Models/FinancialServices/PaymentType.v1.yaml"
                            },
                            "paymentOtherType": {
                              "$ref": "../Models/FinancialServices/PaymentOtherType.v1.yaml"
                            },
                            "locationState": {
                              "$ref": "../Models/FinancialServices/StateName.v1.yaml"
                            },
                            "locationCity": {
                              "$ref": "../Models/FinancialServices/CityName.v1.yaml"
                            },
                            "spid": {
                              "$ref": "../Models/FinancialServices/SpidTransactionNumber.v1.yaml"
                            },
                            "egressReasonCode": {
                              "$ref": "../Models/FinancialServices/EgressReasonCode.v1.yaml"
                            },
                            "egressOtherReason": {
                              "$ref": "../Models/FinancialServices/EgressOtherReason.v1.yaml"
                            },
                            "comments": {
                              "$ref": "../Models/Transactions/TransactionDescription.v1.yaml"
                            },
                            "paymentDate": {
                              "$ref": "../Models/Loans/PaymentDate.v1.yaml"
                            },
                            "comextTransactionNumber": {
                              "$ref": "../Models/FinancialServices/ComextTransactionNumber.v1.yaml"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Dc28RsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "customerName": "CARLOS FRANCISCO LOPEZ PEREZ",
                        "taxId": "1921712-3",
                        "address": "119 CALLE FINAL ",
                        "phone": "30675565",
                        "phoneCode": 502,
                        "email": "juandelacruz@correo.com",
                        "entityType": "PR",
                        "foreignCurrency": {
                          "code": 0,
                          "description": "QUETZAL"
                        },
                        "foreignCurrencyAmount": 125.5,
                        "usdAmount": 125.5,
                        "gtqAmount": 125.5,
                        "destinationCountry": "GUATEMALA",
                        "exchangeRate": 7.65434,
                        "beneficiaryName": "MARTÍNEZ LÓPEZ",
                        "paymentType": "TRANSFERENCIA",
                        "paymentOtherType": "string",
                        "locationState": "GUATEMALA",
                        "locationCity": "GUATEMALA",
                        "spid": 287476420101,
                        "egressReasonCode": "01",
                        "egressOtherReason": "POR  SOPORTE FAMILIAR",
                        "comments": "RETIRO EN CUOTAS CON DEPOSITO A CUENTA VISA",
                        "paymentDate": "2021-02-15",
                        "comextTransactionNumber": "TRR4745770033"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "MessageNotFoundRsExample": {
                    "value": {
                      "code": "SWIFT_NOT_FOUND",
                      "message": "Mensaje SWIFT no encontrado"
                    }
                  },
                  "WireTransferNotFoundRsExample": {
                    "value": {
                      "code": "WIRE_TRANSFER_NOT_FOUND",
                      "message": "No se encontró el numero de referencia de la transferencia internacional"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "download-dc38-http",
        "description": "Servicio que obtiene la información para la generación de un comprobante de una transferencia en formato DC38",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "referenceNumber": {
                    "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                  }
                },
                "required": [
                  "referenceNumber"
                ]
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/financialServices/sales/eventLog": {
      "post": {
        "summary": "Bitácora registro de movimientos ventas digitales.",
        "operationId": "detail-sales-log-http",
        "responses": {
          "200": {
            "description": "Ejecución Exitosa ",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    }
                  ]
                },
                "examples": {
                  "EjecucionExitosa": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Registro de operaciones proceso de ventas digitales y oferta comercial",
        "tags": [
          "Ventas"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "offer": {
                    "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                  },
                  "transactionDate": {
                    "$ref": "../Models/Transactions/TransactionDate.v1.yaml"
                  },
                  "transactionDatetime": {
                    "$ref": "../Models/Transactions/TransactionDatetime.v1.yaml"
                  },
                  "step": {
                    "$ref": "../Models/FinancialServices/stepProcess.yaml"
                  },
                  "dynamicData": {
                    "$ref": "../Models/FinancialServices/Terms.v1.yaml"
                  }
                },
                "required": [
                  "customer",
                  "offer",
                  "transactionDate",
                  "transactionDatetime",
                  "step"
                ]
              },
              "examples": {
                "EjemploenvioLog": {
                  "value": {
                    "customer": 1,
                    "offer": "a18cred001",
                    "transactionDate": "2021-03-15",
                    "transactionDatetime": "2021-01-15T13:57:29.688Z",
                    "step": "string",
                    "dynamicData": "'{ \"dimensions\":{\"w\":11.4,\"d\":8,\"h\":0.7}, \"weight\":2.54, \"color\":\"black\", \"CPU\":\"Intel Celeron N3060 / 1.6 GHz\", \"processor_count\":2, \"operating_system\":\"chrome\", \"memory\":4, \"Storage\":\"16 GB SSD\" }'"
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para la generación y trazabilidad de la bitacora"
        }
      },
      "parameters": [],
      "get": {
        "summary": "Consulta bitácora ventas digitales",
        "operationId": "get-sales-log-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "idCobis": {
                                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                                  },
                                  "offer": {
                                    "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                                  },
                                  "transactionDate": {
                                    "$ref": "../Models/Transactions/TransactionDate.v1.yaml"
                                  },
                                  "transactionDateTime": {
                                    "$ref": "../Models/Transactions/TransactionDatetime.v1.yaml"
                                  },
                                  "step": {
                                    "$ref": "../Models/FinancialServices/stepProcess.yaml"
                                  },
                                  "metadata": {
                                    "$ref": "../Models/FinancialServices/Terms.v1.yaml"
                                  }
                                },
                                "required": [
                                  "idCobis",
                                  "offer",
                                  "transactionDate",
                                  "transactionDateTime",
                                  "step",
                                  "metadata"
                                ]
                              }
                            }
                          },
                          "required": [
                            "result"
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SalesLogRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": [
                          {
                            "idCobis": 1,
                            "offer": "a18cred001",
                            "transactionDate": "2021-03-15",
                            "transactionDateTime": "2021-01-15T13:57:29.688Z",
                            "step": "venta",
                            "metadata": "{\"conditions\": [{\"Cupo\": 40234, \"Tasa\": 20.5, \"Cuota\": 2057.54, \"Plazo\": 24}, {\"Cupo\": 54531, \"Tasa\": 20.5, \"Cuota\": 2040.51, \"Plazo\": 36}, {\"Cupo\": 65964, \"Tasa\": 20.5, \"Cuota\": 2071.64, \"Plazo\": 48}, {\"Cupo\": 75108, \"Tasa\": 20.5, \"Cuota\": 2064.04, \"Plazo\": 60}]}"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "SalesLogRsBadRequest": {
                    "value": {
                      "code": "BAD_REQUEST",
                      "message": "Internal error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "OfferNotFoundRsExample": {
                    "value": {
                      "code": "OFFER_NOT_FOUND",
                      "message": "OFFER_NOT_FOUND"
                    }
                  },
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  },
                  "StepNotFoundRsExample": {
                    "value": {
                      "code": "STEP_NOT_FOUND",
                      "message": "Paso relacionado a oferta no existe"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Consulta de bitacora venta digital",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "#/components/parameters/idCobis"
          },
          {
            "$ref": "#/components/parameters/offer"
          },
          {
            "$ref": "#/components/parameters/stepOffer"
          },
          {
            "$ref": "#/components/parameters/datetime"
          }
        ],
        "tags": [
          "Ventas"
        ]
      }
    },
    "/financialServices/sales/loans": {
      "post": {
        "summary": "Venta digital - crédito fiduciario",
        "tags": [
          "Ventas"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "loanNumber": {
                                  "$ref": "../Models/Loans/LoanNumber.yaml"
                                },
                                "initDate": {
                                  "$ref": "../Models/Loans/OriginationDate.v1.yaml"
                                },
                                "dueDate": {
                                  "$ref": "../Models/CreditCard/DueDate.v1.yaml"
                                },
                                "capitalPayment": {
                                  "$ref": "../Models/Loans/CapitalPayment.v1.yaml"
                                },
                                "firstPayment": {
                                  "$ref": "../Models/Loans/OthersPayment.v1.yaml"
                                }
                              },
                              "required": [
                                "loanNumber",
                                "initDate",
                                "dueDate",
                                "capitalPayment",
                                "firstPayment"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "OriginatedProductRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "loanNumber": "0037463898",
                          "initDate": "2019-02-10",
                          "dueDate": "2021-02-25",
                          "capitalPayment": 2500.45,
                          "firstPayment": 350.24
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no existe"
                    }
                  },
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_NOT_FOUND",
                      "message": "Cuenta para deposito no existe"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "AccountNotFoundRsExample": {
                    "value": {
                      "code": "ACCOUNT_STATE_INVALID",
                      "message": "Cuenta para deposito en estado invalido error"
                    }
                  },
                  "CustomertNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_STATE_INVALID",
                      "message": "Cliente en estado invalido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "sales-loans-http",
        "description": "Proceso Venta digital para los diferentes bloques de orquestación de la colocación de un crédito fiduciario a un cliente natural",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "$ref": "../Models/Transactions/OTP.v1.yaml"
                      }
                    }
                  },
                  "customer": {
                    "type": "object",
                    "required": [
                      "idCobis",
                      "degreeLevel",
                      "taxIdentification",
                      "registerType"
                    ],
                    "properties": {
                      "idCobis": {
                        "$ref": "../Models/Customer/idCobis.v1.yaml"
                      },
                      "degreeLevel": {
                        "$ref": "../Models/Customer/DegreeLevelCode.v1.yaml"
                      },
                      "taxIdentification": {
                        "$ref": "../Models/Customer/TaxIdentification.v1.yaml"
                      },
                      "economicInformation": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "incomeType": {
                              "$ref": "../Models/Customer/IncomeTypeCode.v1.yaml"
                            },
                            "incomeId": {
                              "$ref": "../Models/Customer/IncomeId.v1.yaml"
                            },
                            "employer": {
                              "$ref": "../Models/Customer/EmployerName.v1.yaml"
                            },
                            "commercialName": {
                              "$ref": "../Models/Customer/CommercialName.v1.yaml"
                            },
                            "jobTitle": {
                              "$ref": "../Models/Customer/JobTitle.v1.yaml"
                            },
                            "sector": {
                              "$ref": "../Models/Customer/SectorCode.v1.yaml"
                            },
                            "economicActivity": {
                              "$ref": "../Models/Cobis/EconomicActivityDescription.v1.yaml"
                            },
                            "otherSourceIncome": {
                              "$ref": "../Models/Customer/OtherIncomeTypeCode.v1.yaml"
                            },
                            "amount": {
                              "$ref": "../Models/Customer/IncomeAmount.v1.yaml"
                            },
                            "currency": {
                              "$ref": "../Models/Products/CurrencyCode.yaml"
                            },
                            "address": {
                              "$ref": "../Models/Cobis/AddressCode.v1.yaml"
                            },
                            "businessTypeDescription": {
                              "$ref": "../Models/Cobis/BusinessTypeDescription.v1.yaml"
                            },
                            "incomePrincipal": {
                              "$ref": "../Models/Cobis/incomePrincipal.v1.yaml"
                            },
                            "incomeReason": {
                              "$ref": "../Models/Customer/IncomeReason.v1.yaml"
                            }
                          },
                          "required": [
                            "incomeType"
                          ]
                        }
                      },
                      "e83": {
                        "type": "object",
                        "properties": {
                          "incomeStatement": {
                            "$ref": "../Models/Customer/IncomeStatemetCode.v1.yaml"
                          },
                          "incomeSource": {
                            "$ref": "../Models/Customer/IncomeSourceCode.v1.yaml"
                          },
                          "originReason": {
                            "$ref": "../Models/Cobis/OriginReason.v1.yam.yaml"
                          },
                          "businessType": {
                            "$ref": "../Models/Cobis/BusinessTypeCode.v1.yaml"
                          }
                        }
                      },
                      "registerType": {
                        "type": "string",
                        "enum": [
                          "I",
                          "U",
                          "D"
                        ],
                        "example": "I",
                        "minLength": 1
                      }
                    }
                  },
                  "product": {
                    "type": "object",
                    "required": [
                      "productType",
                      "productClass",
                      "currency",
                      "rate",
                      "amountParameter",
                      "documentParameter",
                      "paymentDay",
                      "amortizationType",
                      "loanTerm",
                      "economicDestinyCode",
                      "expenseType"
                    ],
                    "properties": {
                      "productType": {
                        "$ref": "../Models/Loans/loanType.v1.yaml"
                      },
                      "productClass": {
                        "$ref": "../Models/FinancialServices/ProductClassCode.v1.yaml"
                      },
                      "currency": {
                        "$ref": "../Models/Products/CurrencyCode.yaml"
                      },
                      "rate": {
                        "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                      },
                      "amountParameter": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "enum": [
                                "amount",
                                "amount7",
                                "amount12",
                                "totalAmount"
                              ],
                              "example": "amount",
                              "minLength": 1
                            },
                            "value": {
                              "type": "string",
                              "example": "2000.2",
                              "minLength": 1
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        }
                      },
                      "documentParameter": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "minLength": 1,
                              "enum": [
                                "act",
                                "resolution",
                                "minute",
                                "ruling",
                                "terms",
                                "promissorynote",
                                "creditreport",
                                "actyresolution"
                              ],
                              "example": "act"
                            },
                            "value": {
                              "type": "string",
                              "example": "C01CG-ENE07-2018GDBP",
                              "minLength": 1
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        }
                      },
                      "termType": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "enum": [
                                "biannual",
                                "annual",
                                "expiration",
                                "monthly",
                                "biweekly",
                                "quaterly",
                                "other"
                              ],
                              "example": "monthly",
                              "minLength": 1
                            },
                            "value": {
                              "type": "string",
                              "enum": [
                                "A",
                                "S",
                                "T",
                                "M",
                                "Q",
                                "D",
                                "O"
                              ],
                              "example": "M",
                              "minLength": 1
                            }
                          }
                        }
                      },
                      "paymentDay": {
                        "$ref": "../Models/Loans/PaymentDayCode.v1.yaml"
                      },
                      "amortizationType": {
                        "$ref": "../Models/Loans/amortization.v1.yaml"
                      },
                      "loanTerm": {
                        "$ref": "../Models/Loans/LoanTerm.v1.yaml"
                      },
                      "economicDestinyCode": {
                        "$ref": "../Models/Loans/EconomicDestinyCode.v1.yaml"
                      },
                      "expenseType": {
                        "$ref": "../Models/Loans/ExpenseType.v1.yaml"
                      },
                      "guarantorCustomer": {
                        "$ref": "../Models/Customer/idCobis.v1.yaml"
                      },
                      "accountDeposit": {
                        "type": "object",
                        "properties": {
                          "accountType": {
                            "$ref": "../Models/Products/AccountTypeCode.yaml"
                          },
                          "accountNumber": {
                            "$ref": "../Models/Products/AccountNumber.v1.yaml"
                          }
                        },
                        "required": [
                          "accountType",
                          "accountNumber"
                        ]
                      }
                    }
                  },
                  "offer": {
                    "type": "object",
                    "required": [
                      "offerId",
                      "OperationType"
                    ],
                    "properties": {
                      "offerId": {
                        "$ref": "../Models/FinancialServices/uuid.v1.yaml"
                      },
                      "OperationType": {
                        "$ref": "../Models/FinancialServices/operationType.v1.yaml"
                      },
                      "terms": {
                        "$ref": "../Models/FinancialServices/EspecialTerms.v1.yaml"
                      }
                    }
                  },
                  "documents": {
                    "type": "object",
                    "properties": {
                      "quotationParameter": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "amount",
                                "rate",
                                "paymentDay",
                                "others",
                                "currency",
                                "quota",
                                "loanTerm"
                              ],
                              "example": "loanTerm",
                              "minLength": 1
                            },
                            "value": {
                              "type": "string",
                              "example": "1023198712",
                              "minLength": 1
                            }
                          },
                          "required": [
                            "code",
                            "value"
                          ]
                        }
                      }
                    }
                  },
                  "beneficiary": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product": {
                          "$ref": "../Models/Products/ProductType.v1.yaml"
                        },
                        "name": {
                          "$ref": "../Models/Customer/FullName.v1.yaml"
                        },
                        "gender": {
                          "$ref": "../Models/Products/BeneficiaryGenderCode.v1.yaml"
                        },
                        "parent": {
                          "$ref": "../Models/Products/BeneficiaryParentCode.v1.yaml"
                        },
                        "percentaje": {
                          "$ref": "../Models/Deposits/Beneficiary/BeneficiaryPercentage.v1.yaml"
                        },
                        "address": {
                          "$ref": "../Models/Cobis/AddressDescription.v1.yaml"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "otp",
                  "customer",
                  "product",
                  "offer",
                  "documents"
                ]
              },
              "examples": {
                "requestExample": {
                  "value": {
                    "otp": {
                      "code": "1234567"
                    },
                    "customer": {
                      "idCobis": 1,
                      "degreeLevel": "3",
                      "taxIdentification": "1921712-3",
                      "economicInformation": [
                        {
                          "incomeType": "1",
                          "incomeId": -2147483648,
                          "employer": "SUPERMERCADO LA JUNGLA",
                          "commercialName": "string",
                          "jobTitle": "SECRETARIO(A)",
                          "sector": "1",
                          "economicActivity": "VENTA DE ABARROTES",
                          "otherSourceIncome": "1",
                          "amount": 100.25,
                          "currency": 0,
                          "address": {
                            "country": "1",
                            "state": "1",
                            "city": "1",
                            "zone": "10",
                            "description": "119 CALLE FINAL "
                          },
                          "businessTypeDescription": "Vendo carros",
                          "incomePrincipal": "1",
                          "incomeReason": "pagos varios"
                        }
                      ],
                      "e83": {
                        "incomeStatement": "4",
                        "incomeSource": "1",
                        "originReason": "Por envió de remesa mensual de pariente en Alemania",
                        "businessType": "1"
                      },
                      "registerType": "I"
                    },
                    "product": {
                      "productType": 7,
                      "productClass": "S",
                      "currency": 0,
                      "rate": 7.65434,
                      "amountParameter": [
                        {
                          "key": "amount",
                          "value": "2000.2"
                        }
                      ],
                      "documentParameter": [
                        {
                          "key": "act",
                          "value": "C01CG-ENE07-2018GDBP"
                        }
                      ],
                      "termType": [
                        {
                          "key": "biannual",
                          "value": "A"
                        }
                      ],
                      "paymentDay": 16,
                      "amortizationType": "FRANCESA",
                      "loanTerm": 24,
                      "economicDestinyCode": "0003",
                      "expenseType": "0001",
                      "guarantorCustomer": 1,
                      "accountDeposit": {
                        "accountType": 3,
                        "accountNumber": "3645770022"
                      }
                    },
                    "offer": {
                      "offerId": "936bae7c-bfec-11eb-8529-0242ac130003",
                      "OperationType": "string",
                      "terms": "Cuotas Gratis"
                    },
                    "documents": {
                      "quotationParameter": [
                        {
                          "code": "amount",
                          "value": "1023198712"
                        }
                      ]
                    },
                    "beneficiary": [
                      {
                        "product": {
                          "code": 4,
                          "description": "CUENTA DE AHORROS"
                        },
                        "name": "CARLOS FRANCISCO LOPEZ PEREZ",
                        "gender": "M",
                        "parent": "007",
                        "percentaje": 100,
                        "address": "119 CALLE FINAL "
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Paso de parametros body para los diferentes bloques a orquestar, data agrupada según segmentos logicos cobis para el uso."
        }
      },
      "parameters": []
    },
    "/financialServices/digitalSign": {
      "post": {
        "summary": "Firma electrónica originación",
        "tags": [
          "Ventas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "queued",
                          "minLength": 1
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "responseBodyExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {},
                      "status": "queued"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "responseErrorExample1": {
                    "value": {
                      "code": "INVALID_RECIPIENT",
                      "message": "invalid recipient for notification",
                      "errors": [
                        {
                          "code": "INVALID_EMAIL",
                          "param": "TO",
                          "message": "invalid email"
                        }
                      ]
                    }
                  },
                  "responseErrorExample2": {
                    "value": {
                      "code": "INVALID_SENDER",
                      "message": "invalid sender for notification",
                      "errors": [
                        {
                          "code": "INVALID_EMAIL",
                          "param": "FROM",
                          "message": "invalid email"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "InvalidProductTypeRsExample": {
                    "value": {
                      "code": "INVALID_PRODUCT_TYPE",
                      "message": "Tipo de producto invalido"
                    }
                  },
                  "InvalidProductClassRsExample": {
                    "value": {
                      "code": "INVALID_PRODUCT_CLASS",
                      "message": "Tipo de sub producto invalido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          },
          "504": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          }
        },
        "operationId": "sign-sales-http",
        "description": "Firma electronica para la originación de productos",
        "security": [
          {
            "api_key": []
          },
          {
            "AuthorizationChannels": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idCobis": {
                    "$ref": "../Models/Customer/idCobis.v1.yaml"
                  },
                  "flow": {
                    "type": "string",
                    "enum": [
                      "TC",
                      "CF",
                      "CTAF"
                    ],
                    "example": "CF",
                    "minLength": 1
                  },
                  "email": {
                    "$ref": "../Models/Cobis/Email.v1.yaml"
                  },
                  "phone": {
                    "type": "object",
                    "properties": {
                      "countryCode": {
                        "$ref": "../Models/Cobis/CountryCode.v1.yaml"
                      },
                      "phoneNumber": {
                        "$ref": "../Models/Customer/PhoneNumber.v1.yaml"
                      }
                    },
                    "required": [
                      "countryCode",
                      "phoneNumber"
                    ]
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "cf": {
                        "type": "object",
                        "properties": {
                          "offer": {
                            "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                          },
                          "customerName": {
                            "$ref": "../Models/Customer/FullName.v1.yaml"
                          },
                          "amount": {
                            "$ref": "../Models/Loans/OriginalAmount.v1.yaml"
                          },
                          "currency": {
                            "$ref": "../Models/Products/CurrencyCode.yaml"
                          },
                          "monthlyFee": {
                            "$ref": "../Models/FinancialServices/MonthlyFee.v1.yaml"
                          },
                          "terms": {
                            "$ref": "../Models/Loans/LoanTerm.v1.yaml"
                          },
                          "rate": {
                            "$ref": "../Models/FinancialServices/Rate.v1.yaml"
                          },
                          "paymentDay": {
                            "$ref": "../Models/Loans/PaymentDayCode.v1.yaml"
                          },
                          "account": {
                            "$ref": "../Models/Products/AccountNumber.v1.yaml"
                          },
                          "accountType": {
                            "$ref": "../Models/Products/AccountType.v1.yaml"
                          },
                          "accountClass": {
                            "$ref": "../Models/Products/ProductClass.v1.yaml"
                          }
                        }
                      },
                      "tc": {
                        "type": "object",
                        "properties": {
                          "customerName": {
                            "$ref": "../Models/Customer/FullName.v1.yaml"
                          },
                          "creditLimit": {
                            "$ref": "../Models/CreditCard/CreditLimit.v1.yaml"
                          },
                          "targetType": {
                            "$ref": "../Models/CreditCard/TargetType.v1.yaml"
                          },
                          "currency": {
                            "$ref": "../Models/Products/CurrencyCode.yaml"
                          }
                        }
                      }
                    }
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "image/png,application/pdf",
                          "example": "pdf"
                        },
                        "filename": {
                          "type": "string",
                          "description": "carroejemplo.png o carroejemplo.pdf",
                          "example": "dpi.png"
                        },
                        "content": {
                          "$ref": "../Models/Products/Documents.v1.yaml"
                        }
                      },
                      "required": [
                        "type",
                        "filename",
                        "content"
                      ]
                    }
                  }
                },
                "required": [
                  "flow",
                  "metadata"
                ]
              },
              "examples": {
                "RequestSignRqExample": {
                  "value": {
                    "idCobis": 1,
                    "flow": "TC",
                    "email": "juandelacruz@correo.com",
                    "metadata": {
                      "cf": {
                        "offer": "a18cred001",
                        "customerName": "CARLOS FRANCISCO LOPEZ PEREZ",
                        "amount": 200000,
                        "currency": 0,
                        "monthlyFee": 2500,
                        "terms": 24,
                        "rate": 7.65434,
                        "paymentDay": 16,
                        "account": "3645770022",
                        "accountType": {
                          "code": 3,
                          "description": "CUENTA CORRIENTE"
                        },
                        "accountClass": {
                          "code": "11",
                          "description": "AHORRO PLUS INT. S/M"
                        }
                      }
                    }
                  }
                },
                "TcSignRqExample": {
                  "value": {
                    "idCobis": 1,
                    "flow": "TC",
                    "email": "juandelacruz@correo.com",
                    "metadata": {
                      "tc": {
                        "customerName": "CARLOS FRANCISCO LOPEZ PEREZ",
                        "creditLimit": 3000,
                        "targetType": "VC_PLATINUM_MAX",
                        "currency": 0
                      }
                    }
                  }
                },
                "requestSignRqExampleWithAttachments": {
                  "value": {
                    "idCobis": 1,
                    "flow": "TC",
                    "email": "juandelacruz@correo.com",
                    "phone": {
                      "countryCode": "1",
                      "phoneNumber": "30675565"
                    },
                    "metadata": {
                      "cf": {
                        "offer": "a18cred001",
                        "customerName": "CARLOS FRANCISCO LOPEZ PEREZ",
                        "amount": 200000,
                        "currency": 0,
                        "monthlyFee": 2500,
                        "terms": 24,
                        "rate": 7.65434,
                        "paymentDay": 16,
                        "account": "3645770022",
                        "accountType": {
                          "code": 3,
                          "description": "CUENTA CORRIENTE"
                        },
                        "accountClass": {
                          "code": "11",
                          "description": "AHORRO PLUS INT. S/M"
                        }
                      },
                      "tc": {
                        "customerName": "CARLOS FRANCISCO LOPEZ PEREZ",
                        "creditLimit": 3000,
                        "targetType": "VC_PLATINUM_MAX",
                        "currency": 0
                      }
                    },
                    "attachments": {
                      "type": "png",
                      "filename": "contrato.png",
                      "content": ""
                    }
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para orquestación"
        }
      },
      "parameters": []
    },
    "/financialServices/sales/cards": {
      "post": {
        "summary": "Ventas digitales - Creación de Tarjeta de Crédito",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "cardNumber"
                              ],
                              "properties": {
                                "cardNumber": {
                                  "$ref": "../Models/CreditCard/CardNumberTC.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "CreateProductRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "cardNumber": "4546"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CreatedNotAuthorizedRsExample": {
                    "value": {
                      "code": "NOT_AUTHORIZED",
                      "message": "Ejecución no autorizada"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerStateInvalidRsExample": {
                    "value": {
                      "code": "CUSTOMER_STATE_INVALID",
                      "message": "Cliente en estado invalido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "sales-tc-http",
        "description": "Proceso de orquestación creación de tarjeta de crédito",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "$ref": "../Models/Security/OTP.v1.yaml"
                      }
                    }
                  },
                  "customer": {
                    "type": "object",
                    "required": [
                      "idCobis"
                    ],
                    "properties": {
                      "idCobis": {
                        "$ref": "../Models/Customer/idCobis.v1.yaml"
                      },
                      "degreeLevel": {
                        "$ref": "../Models/Customer/DegreeLevelCode.v1.yaml"
                      },
                      "taxIdentification": {
                        "$ref": "../Models/Customer/TaxIdentification.v1.yaml"
                      },
                      "registerType": {
                        "$ref": "../Models/FinancialServices/registerType.v1.yaml"
                      },
                      "e83": {
                        "type": "object",
                        "properties": {
                          "incomeStatement": {
                            "$ref": "../Models/Customer/IncomeStatemetCode.v1.yaml"
                          },
                          "incomeSource": {
                            "$ref": "../Models/Customer/IncomeSourceCode.v1.yaml"
                          },
                          "originReason": {
                            "$ref": "../Models/Cobis/OriginReason.v1.yam.yaml"
                          },
                          "businessType": {
                            "$ref": "../Models/Cobis/BusinessTypeCode.v1.yaml"
                          }
                        }
                      },
                      "economicInformation": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "incomeType": {
                              "$ref": "../Models/Customer/IncomeTypeCode.v1.yaml"
                            },
                            "incomeId": {
                              "$ref": "../Models/Customer/IncomeId.v1.yaml"
                            },
                            "employer": {
                              "$ref": "../Models/Customer/EmployerName.v1.yaml"
                            },
                            "commercialName": {
                              "$ref": "../Models/Customer/CommercialName.v1.yaml"
                            },
                            "jobTitle": {
                              "$ref": "../Models/Customer/JobTitle.v1.yaml"
                            },
                            "sector": {
                              "$ref": "../Models/Customer/SectorCode.v1.yaml"
                            },
                            "economicActivity": {
                              "$ref": "../Models/Cobis/EconomicActivityDescription.v1.yaml"
                            },
                            "otherSourceIncome": {
                              "$ref": "../Models/Customer/OtherIncomeTypeCode.v1.yaml"
                            },
                            "amount": {
                              "$ref": "../Models/Customer/IncomeAmount.v1.yaml"
                            },
                            "currency": {
                              "$ref": "../Models/Products/CurrencyCode.yaml"
                            },
                            "address": {
                              "$ref": "../Models/Cobis/AddressCode.v1.yaml"
                            },
                            "incomeReason": {
                              "$ref": "../Models/Customer/IncomeReason.v1.yaml"
                            },
                            "businessTypeDescription": {
                              "$ref": "../Models/Cobis/BusinessTypeDescription.v1.yaml"
                            },
                            "incomePrincipal": {
                              "$ref": "../Models/Cobis/incomePrincipal.v1.yaml"
                            }
                          },
                          "required": [
                            "incomeType"
                          ]
                        }
                      }
                    }
                  },
                  "contactability": {
                    "type": "object",
                    "description": "Seccion general para crear esquemas de contactabilidad",
                    "required": [
                      "country",
                      "address",
                      "preferenceBranch"
                    ],
                    "properties": {
                      "country": {
                        "$ref": "../Models/Cobis/CountryCode.v1.yaml"
                      },
                      "address": {
                        "type": "object",
                        "description": "Seccion para identificar direcciones de cliente\n\nSi cliente posee una dirección enviar AddressId, excluyendo parametros de creación de dirección, si cliente desea crear una dirección no enviar dato addressId",
                        "properties": {
                          "city": {
                            "$ref": "../Models/Cobis/CityCode.v1.yaml"
                          },
                          "sector": {
                            "$ref": "../Models/Customer/SectorCode.v1.yaml"
                          },
                          "state": {
                            "$ref": "../Models/Cobis/StateCode.v1.yaml"
                          },
                          "principal": {
                            "$ref": "../Models/Cobis/PrincipalAddress.v1.yaml"
                          },
                          "addressDescription": {
                            "$ref": "../Models/Cobis/AddressDescription.v1.yaml"
                          },
                          "zone": {
                            "$ref": "../Models/Cobis/Zone.v1.yaml"
                          },
                          "addressType": {
                            "$ref": "../Models/Cobis/AddressType.v1.yaml"
                          },
                          "addressId": {
                            "$ref": "../Models/Cobis/AddressId.v1.yaml"
                          }
                        }
                      },
                      "preferenceBranch": {
                        "$ref": "../Models/Cobis/BranchCode.yaml"
                      }
                    }
                  },
                  "offer": {
                    "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                  }
                },
                "required": [
                  "otp",
                  "customer",
                  "contactability",
                  "offer"
                ]
              },
              "examples": {
                "ActivateAccountOrchestrationRqExample": {
                  "value": {
                    "otp": {
                      "code": "1234567"
                    },
                    "customer": {
                      "idCobis": 1,
                      "degreeLevel": "3",
                      "taxIdentification": "1921712-3",
                      "registerType": "I",
                      "e83": {
                        "incomeStatement": "4",
                        "incomeSource": "1",
                        "originReason": "Por envió de remesa mensual de pariente en Alemania",
                        "businessType": "1"
                      },
                      "economicInformation": [
                        {
                          "incomeType": "1",
                          "incomeId": 0,
                          "employer": "SUPERMERCADO LA JUNGLA",
                          "commercialName": "string",
                          "jobTitle": "SECRETARIO(A)",
                          "sector": "1",
                          "economicActivity": "VENTA DE ABARROTES",
                          "otherSourceIncome": "1",
                          "amount": 100.25,
                          "currency": 0,
                          "address": {
                            "country": "1",
                            "state": "1",
                            "city": "1",
                            "zone": "10",
                            "description": "119 CALLE FINAL "
                          },
                          "incomeReason": "Me envían dinero",
                          "businessTypeDescription": "Vendo carros",
                          "incomePrincipal": "1"
                        }
                      ]
                    },
                    "contactability": {
                      "country": "1",
                      "address": {
                        "city": "1",
                        "sector": "1",
                        "state": "1",
                        "principal": "S",
                        "addressDescription": "119 CALLE FINAL ",
                        "zone": "10",
                        "addressType": "CO",
                        "addressId": 1
                      },
                      "preferenceBranch": 156
                    },
                    "offer": "a18cred001"
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para la generación de servicio en orquestación de creación de cuentas"
        },
        "tags": [
          "Ventas"
        ]
      },
      "parameters": []
    },
    "/financialServices/sales/detail": {
      "post": {
        "summary": "Crea detalle de venta según oferta comercial",
        "operationId": "detail-offer-http",
        "responses": {
          "200": {
            "description": "Proceso de ejecución exitosa ",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "result": {
                                  "$ref": "../Models/Transactions/ReferenceNumber.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "EjemploEjecución": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "result": "1064052816512"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "405": {
            "$ref": "#/components/responses/Method-Not-Allowed"
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Inserta registro de oferta comercial vendida en detalle de venta",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "offerId": {
                    "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                  },
                  "product": {
                    "$ref": "../Models/FinancialServices/ProductTypeCode.v1.yaml"
                  },
                  "productClass": {
                    "$ref": "../Models/FinancialServices/ProductClassCode.v1.yaml"
                  },
                  "productNumber": {
                    "$ref": "../Models/FinancialServices/ProductNumber.v1.yaml"
                  },
                  "terms": {
                    "$ref": "../Models/FinancialServices/EspecialTerms.v1.yaml"
                  },
                  "team": {
                    "$ref": "../Models/FinancialServices/comercialTeam.v1.yaml"
                  },
                  "consultant": {
                    "$ref": "../Models/Collections/UserCode.v1.yaml"
                  }
                },
                "required": [
                  "offerId",
                  "product",
                  "productClass",
                  "productNumber",
                  "terms"
                ]
              },
              "examples": {
                "EjemploPost": {
                  "value": {
                    "offerId": "A18A1234",
                    "product": "P",
                    "productClass": "S",
                    "productNumber": "112233445566",
                    "terms": "Cuotas Gratis",
                    "team": "GerenciaVentas",
                    "consultant": "00012365"
                  }
                }
              }
            }
          },
          "description": "Body paso de parametros para insert de oferta comercial"
        },
        "tags": [
          "Ventas"
        ]
      },
      "parameters": []
    },
    "/financialServices/sales/offered": {
      "post": {
        "summary": "Registro de oferente",
        "tags": [
          "Ventas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "success"
                              ],
                              "properties": {
                                "success": {
                                  "$ref": "../Models/Cobis/SuccessCode.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "RegisteredOfferedRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "success": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "register-offered-http",
        "description": "Registro de oferente en ecosistema de ventas digitales",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "offer": "a18cred001",
                    "channel": "SVP",
                    "commercialTeam": "1",
                    "commercialUser": "JSOLARESM"
                  }
                },
                "properties": {
                  "offer": {
                    "$ref": "../Models/FinancialServices/Offer.v1.yaml"
                  },
                  "exposedChannel": {
                    "type": "array",
                    "description": "Arreglo de canales\n(ALL) Todos los canales,\nresto de canales según documentación de wiki",
                    "items": {
                      "$ref": "../Models/FinancialServices/Channel.v1.yaml"
                    }
                  },
                  "commercialTeam": {
                    "$ref": "../Models/FinancialServices/comercialTeam.v1.yaml"
                  },
                  "commercialUser": {
                    "$ref": "../Models/FinancialServices/CommercialUserCode.v1.yaml"
                  }
                },
                "required": [
                  "offer",
                  "exposedChannel"
                ]
              },
              "examples": {
                "RegistredOfferedRqExample": {
                  "value": {
                    "offer": "a18cred001",
                    "exposedChannel": [
                      "SVP"
                    ],
                    "commercialTeam": "1",
                    "commercialUser": "JSOLARESM"
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para registro de oferente"
        }
      }
    },
    "/finantialServices/easyCash/payment/{lotNumber}": {
      "post": {
        "summary": "Crear Pago",
        "operationId": "post-easy-cash-payment-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "transactionId": {
                              "$ref": "../Models/Transactions/TransactionId.yaml"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SuccessfulRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "TransactionId": 42472
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CodeAlreadyExistsRsExample": {
                    "value": {
                      "code": "PASSWORD_ALREADY_EXISTS",
                      "message": "Payment code must be unique"
                    }
                  },
                  "CodeFormatInvalidRsExample": {
                    "value": {
                      "code": "PASSWORD_FORMAT_INVALID",
                      "message": "Code must start with company Code"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Servicio que registra el pago de un beneficiario de Efectivo Fácil",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "$ref": "../Models/EasyCash/Code.v1.yaml"
                  },
                  "sequential": {
                    "$ref": "../Models/EasyCash/Sequential.v1.yaml"
                  },
                  "documentType": {
                    "$ref": "../Models/EasyCash/DocumentType.v1.yaml"
                  },
                  "documentNumber": {
                    "$ref": "../Models/EasyCash/DocumentNumber.v1.yaml"
                  },
                  "beneficiaryName": {
                    "$ref": "../Models/EasyCash/BeneficiaryName.v1.yaml"
                  },
                  "beneficiaryLastName": {
                    "$ref": "../Models/EasyCash/BeneficiaryLastName.v1.yaml"
                  },
                  "country": {
                    "$ref": "../Models/EasyCash/Country.v1.yaml"
                  },
                  "email": {
                    "$ref": "../Models/Cobis/Email.v1.yaml"
                  },
                  "phone": {
                    "$ref": "../Models/Customer/PhoneNumber.v1.yaml"
                  },
                  "dateOfBirth": {
                    "$ref": "../Models/Customer/BirthDate.v1.yaml"
                  },
                  "amount": {
                    "$ref": "../Models/EasyCash/Amount.v1.yaml"
                  },
                  "ballot": {
                    "$ref": "../Models/EasyCash/Ballot.v1.yaml"
                  },
                  "companyCode": {
                    "$ref": "../Models/EasyCash/CompanyCode.v1.yaml"
                  }
                },
                "required": [
                  "code",
                  "sequential",
                  "documentType",
                  "documentNumber",
                  "beneficiaryName",
                  "beneficiaryLastName",
                  "amount",
                  "ballot",
                  "companyCode"
                ]
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Efectivo Fácil"
        ]
      },
      "delete": {
        "summary": "Cancelar Pago",
        "operationId": "delete-easy-cash-payment-http",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "LotNumberNotFound": {
                    "value": {
                      "code": "NO_FOUND",
                      "message": "No se encontró el número de lote"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "InvalidStatusRsExample": {
                    "value": {
                      "code": "INVALID_STATUS",
                      "message": "El estado actual del pago no es válido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Cancela el pago de un beneficiario de un lote",
        "tags": [
          "Efectivo Fácil"
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transactionId": {
                    "$ref": "../Models/Transactions/TransactionId.yaml"
                  }
                },
                "required": [
                  "transactionId"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "lotNumber",
          "in": "path",
          "required": true
        }
      ]
    },
    "/finantialServices/easyCash/payment/detail/{companyCode}": {
      "get": {
        "summary": "Consultar Pagos",
        "tags": [
          "Efectivo Fácil"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Resultado de la operación",
                          "properties": {
                            "payments": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "creationDate": {
                                    "$ref": "../Models/Operation/CreationDate.v1.yaml"
                                  },
                                  "amount": {
                                    "$ref": "../Models/EasyCash/Amount.v1.yaml"
                                  },
                                  "code ": {
                                    "$ref": "../Models/EasyCash/Code.v1.yaml"
                                  },
                                  "lotNumber": {
                                    "$ref": "../Models/EasyCash/LotNumber.v1.yaml"
                                  },
                                  "transactionId": {
                                    "$ref": "../Models/Transactions/TransactionId.yaml"
                                  },
                                  "beneficiaryName": {
                                    "$ref": "../Models/EasyCash/BeneficiaryFullName.v1.yaml"
                                  },
                                  "status": {
                                    "$ref": "../Models/EasyCash/Status.v1.yaml"
                                  },
                                  "documentType": {
                                    "$ref": "../Models/EasyCash/DocumentType.v1.yaml"
                                  },
                                  "documentNumber": {
                                    "$ref": "../Models/EasyCash/DocumentNumber.v1.yaml"
                                  },
                                  "country": {
                                    "$ref": "../Models/EasyCash/Country.v1.yaml"
                                  },
                                  "birthDate": {
                                    "$ref": "../Models/Customer/BirthDate.v1.yaml"
                                  },
                                  "email": {
                                    "$ref": "../Models/Cobis/Email.v1.yaml"
                                  },
                                  "phone": {
                                    "$ref": "../Models/Customer/PhoneNumber.v1.yaml"
                                  },
                                  "executionDate": {
                                    "$ref": "../Models/Operation/PaymentDate.yaml"
                                  },
                                  "branch": {
                                    "$ref": "../Models/Cobis/Branch.v1.yaml"
                                  },
                                  "ballot": {
                                    "$ref": "../Models/EasyCash/Ballot.v1.yaml"
                                  }
                                }
                              }
                            },
                            "totalResults": {
                              "$ref": "../Models/Pagination/TotalResults.v1.yaml"
                            },
                            "prevLimit": {
                              "$ref": "../Models/Pagination/PrevLimit.v1.yaml"
                            },
                            "prevOffset": {
                              "$ref": "../Models/Pagination/PrevOffset.v1.yaml"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SuccessPagedRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "payments": [
                          {
                            "creationDate": "2021-01-01",
                            "amount": 3500,
                            "code ": "020225463124",
                            "lotNumber": 222187,
                            "transactionId": 12345,
                            "beneficiaryName": "MARTA LUCÍA MARTINEZ LÓPEZ",
                            "status": "A",
                            "documentType": 1,
                            "documentNumber": "2221871010101",
                            "country": "GUATEMALA",
                            "birthDate": "2019-08-24",
                            "email": "juandelacruz@correo.com",
                            "phone": "30675565",
                            "executionDate": "2021-01-01",
                            "branch": {
                              "code": 1,
                              "name": "OFICINAS CENTRALES"
                            },
                            "ballot": true
                          }
                        ],
                        "totalResults": 350,
                        "prevLimit": 10,
                        "prevOffset": 4673
                      }
                    }
                  },
                  "SuccessUnPagedRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "payments": [
                          {
                            "creationDate": "2021-01-01",
                            "amount": 3500,
                            "code ": "020225463124",
                            "lotNumber": 222187,
                            "transactionId": 12345,
                            "beneficiaryName": "MARTA LUCÍA MARTINEZ LÓPEZ",
                            "status": "A",
                            "documentType": 1,
                            "documentNumber": "2221871010101",
                            "country": "GUATEMALA",
                            "birthDate": "2019-08-24",
                            "email": "juandelacruz@correo.com",
                            "phone": "30675565",
                            "executionDate": "2021-01-01",
                            "branch": {
                              "code": 1,
                              "name": "OFICINAS CENTRALES"
                            },
                            "ballot": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          }
        },
        "operationId": "get-easy-cash-payment-http",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "#/components/parameters/lotNumber"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/executionDateFrom"
          },
          {
            "$ref": "#/components/parameters/executionDateTo"
          },
          {
            "$ref": "#/components/parameters/paymentCode"
          },
          {
            "$ref": "#/components/parameters/paymentBallot"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/OffSet"
          }
        ],
        "description": "Servicio que devuelve los pagos de Efectivo Fácil por lote."
      },
      "parameters": [
        {
          "name": "companyCode",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "example": 82
          },
          "description": "Número de empresa afiliada"
        }
      ]
    },
    "/finantialServices/easyCash/company": {
      "post": {
        "summary": "Configurar Empresa",
        "operationId": "post-finantial-services-easy-cash-company-http",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "SuccessfulRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "UnauthorizedRsExample": {
                    "value": {
                      "code": "UNAUTHORIZED",
                      "message": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "description": "Servicio que registra el pago de un beneficiario de Efectivo Fácil",
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "companyName": {
                    "$ref": "../Models/FinancialServices/CompanyName.v1.yaml"
                  },
                  "companyAccountNumber": {
                    "$ref": "../Models/Products/AccountNumber.v1.yaml"
                  },
                  "companyAccountType": {
                    "$ref": "../Models/Products/AccountTypeCode.yaml"
                  },
                  "companyAccountCurrency": {
                    "$ref": "../Models/Products/CurrencyCode.yaml"
                  },
                  "collectionCause": {
                    "$ref": "../Models/Transactions/Cause.v1.yaml"
                  }
                },
                "required": [
                  "companyName",
                  "companyAccountNumber",
                  "companyAccountType",
                  "companyAccountCurrency",
                  "collectionCause"
                ]
              },
              "examples": {
                "bodyRqExample": {
                  "value": {
                    "companyName": "Empresa de Servicios, S.A.",
                    "companyAccountNumber": "3645770022",
                    "companyAccountType": 3,
                    "companyAccountCurrency": 0,
                    "collectionCause": {
                      "code": 156,
                      "description": "DEBITO TRANSFERENCIA ACH"
                    }
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Efectivo Fácil"
        ]
      }
    },
    "/financialServices/sales/parameters": {
      "put": {
        "summary": "Parametros de venta productos activos",
        "tags": [
          "Ventas"
        ],
        "operationId": "sales-parameter-http",
        "description": "Consulta de parametros de venta segun esquema de venta",
        "security": [
          {
            "api_key": []
          },
          {
            "AuthorizationChannels": []
          }
        ],
        "parameters": [
          {
            "$ref": "./composition.v1.json#/components/parameters/channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productType": {
                    "$ref": "../Models/FinancialServices/ProductTypeCode.v1.yaml"
                  },
                  "productClass": {
                    "$ref": "../Models/FinancialServices/ProductClassCode.v1.yaml"
                  },
                  "segment": {
                    "$ref": "../Models/Cobis/segmentCode.v1.yaml"
                  },
                  "subSegment": {
                    "$ref": "../Models/Cobis/subSegmentCode.v1.yaml"
                  }
                },
                "required": [
                  "productType",
                  "productClass"
                ]
              },
              "examples": {
                "salesParameterRqExample": {
                  "value": {
                    "productType": "7",
                    "productClass": "PCRFA",
                    "segment": "001",
                    "subSegment": "B02"
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para busqueda de parametros de venta"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "result": {
                              "type": "object",
                              "properties": {
                                "salesParameter": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "conditions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "example": "policy"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "10"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "value"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "conditions"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "salesParameter"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "salesParameterRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "salesParameter": [
                          {
                            "key": "policy",
                            "value": "5"
                          },
                          {
                            "key": "rate",
                            "value": "10"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "NotFoundRsExample": {
                    "value": {
                      "code": "NOT_FOUND",
                      "message": "Parametros de venta no encontrados"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        }
      },
      "parameters": []
    },
    "/financialServices/origination/cards": {
      "post": {
        "summary": "Originación - Creación de Tarjeta de Crédito",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../Models/Base-Response.v1.json"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "result"
                          ],
                          "properties": {
                            "result": {
                              "type": "object",
                              "required": [
                                "cardNumber"
                              ],
                              "properties": {
                                "cardNumber": {
                                  "$ref": "../Models/CreditCard/CardNumberTC.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                },
                "examples": {
                  "CreateProductRsExample": {
                    "value": {
                      "code": "OPERATION_SUCCESSFUL",
                      "message": "Operación exitosa",
                      "data": {
                        "result": {
                          "cardNumber": "4546"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "code": "BAD_REQUEST",
                      "message": "Los datos requeridos no estan completos"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CreatedNotAuthorizedRsExample": {
                    "value": {
                      "code": "NOT_AUTHORIZED",
                      "message": "Ejecución no autorizada"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerNotFoundRsExample": {
                    "value": {
                      "code": "CUSTOMER_NOT_FOUND",
                      "message": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error de procesamiento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../Models/Base-Error.v1.json"
                },
                "examples": {
                  "CustomerStateInvalidRsExample": {
                    "value": {
                      "code": "CUSTOMER_STATE_INVALID",
                      "message": "Cliente en estado invalido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Uncontroller-Error"
          },
          "503": {
            "$ref": "#/components/responses/Service-Unavailable"
          }
        },
        "operationId": "sales-org-tc-http",
        "description": "Proceso de orquestación creación de tarjeta de crédito (Originación)",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "./customers.v1.json#/components/parameters/Authorization"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Identifier"
          },
          {
            "$ref": "./customers.v1.json#/components/parameters/Channel"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/branch"
          },
          {
            "$ref": "./composition.v1.json#/components/parameters/reason"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "$ref": "../Models/Security/OTP.v1.yaml"
                      }
                    }
                  },
                  "requestId": {
                    "$ref": "../Models/Origination/RequestId.v1.yaml"
                  },
                  "shippingMethod": {
                    "$ref": "../Models/CreditCard/ShippingMethod.v1.yaml"
                  },
                  "retentionTC": {
                    "type": "object",
                    "properties": {
                      "advisorCode": {
                        "$ref": "../Models/CreditCard/request/AdvisorCode.v1.yaml"
                      },
                      "advisorName": {
                        "$ref": "../Models/CreditCard/request/AdvisorName.v1.yaml"
                      },
                      "advisoBanking": {
                        "$ref": "../Models/CreditCard/request/advisorBanking.v1.yaml"
                      }
                    }
                  },
                  "identificationNumber": {
                    "$ref": "../Models/Customer/IdentificationNumber.v1.yaml"
                  },
                  "identificationType": {
                    "$ref": "../Models/Customer/IdentificationType.v1.yaml"
                  },
                  "frequentFlyer": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "$ref": "../Models/CreditCard/CustomerTitle.v1.yaml"
                      },
                      "shipping": {
                        "$ref": "../Models/CreditCard/request/ShippingVF.v1.yaml"
                      },
                      "conditions": {
                        "$ref": "../Models/CreditCard/CreationCardJSON.v1.yaml"
                      }
                    }
                  }
                },
                "required": [
                  "otp",
                  "requestId",
                  "shippingMethod",
                  "identificationNumber",
                  "identificationType"
                ]
              },
              "examples": {
                "OrchestationExampleRetention": {
                  "value": {
                    "otp": {
                      "code": "1234567"
                    },
                    "requestId": "936bae7c-bfec-11eb-8529-0242ac130003",
                    "shippingMethod": "R",
                    "retentionTC": {
                      "advisorCode": "C0123",
                      "advisorName": "Juan Perez",
                      "advisoBanking": "Preferencial"
                    },
                    "identificationNumber": "1234567890123",
                    "identificationType": "DPI",
                    "frequentFlyer": {
                      "title": "SR",
                      "shipping": "C",
                      "conditions": "{\"addCorrelative\": [{\"ACCION\": \"04\", \"ORGANIZACION\": \"094\", \"LOGO\": \"037\", \"TIPO CUENTA / TARJETA\": \"01\",\"CORRELATIVO\": \"000421837          \",\"TIPO CUENTA\": \"  \",\"TRAMA\":\"094777071249BANCO AGROMERCANTIL 08571029040940371000421837             \", \"RESPUESTA\": \"00371434185517024000422779700008943              \"}]}"
                    }
                  }
                },
                "OrchestationExampleShippingToCustomerAddress": {
                  "value": {
                    "otp": {
                      "code": "1234567"
                    },
                    "requestId": "936bae7c-bfec-11eb-8529-0242ac130003",
                    "identificationNumber": "1234567890123",
                    "shippingMethod": "D",
                    "identificationType": "DPI",
                    "frequentFlyer": {
                      "title": "SR",
                      "shipping": "C",
                      "conditions": "{\"addCorrelative\": [{\"ACCION\": \"04\", \"ORGANIZACION\": \"094\", \"LOGO\": \"037\", \"TIPO CUENTA / TARJETA\": \"01\",\"CORRELATIVO\": \"000421837          \",\"TIPO CUENTA\": \"  \",\"TRAMA\":\"094777071249BANCO AGROMERCANTIL 08571029040940371000421837             \", \"RESPUESTA\": \"00371434185517024000422779700008943              \"}]}"
                    }
                  }
                },
                "OrchestationExampleShippingToAgency": {
                  "value": {
                    "otp": {
                      "code": "1234567"
                    },
                    "requestId": "936bae7c-bfec-11eb-8529-0242ac130003",
                    "shippingMethod": "A",
                    "identificationNumber": "1234567890123",
                    "identificationType": "DPI",
                    "frequentFlyer": {
                      "title": "SR",
                      "shipping": "C",
                      "conditions": "{\"addCorrelative\": [{\"ACCION\": \"04\", \"ORGANIZACION\": \"094\", \"LOGO\": \"037\", \"TIPO CUENTA / TARJETA\": \"01\",\"CORRELATIVO\": \"000421837          \",\"TIPO CUENTA\": \"  \",\"TRAMA\":\"094777071249BANCO AGROMERCANTIL 08571029040940371000421837             \", \"RESPUESTA\": \"00371434185517024000422779700008943              \"}]}"
                    }
                  }
                }
              }
            }
          },
          "description": "Paso de parametros para la generación de servicio en orquestación de creeación de Tarjetas"
        },
        "tags": [
          "Originacion"
        ]
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "api_key": {
        "name": "x-api-key",
        "type": "apiKey",
        "in": "header",
        "description": "API Key asignado para otorgar accesos a los distintos endpoints del API"
      },
      "AuthorizationChannels": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authentique los requests incluyendo el [Bearer Token](../docs/authentication.md) en el `Authorization` request header.\n\nEj:\n\n```http\nGET /accounts\nhost: api.bam.com.gt\nAccept: application/json\nAuthorization: {{ACCESS_TOKEN}}\n```"
      }
    },
    "responses": {
      "Uncontroller-Error": {
        "description": "Uncontroller error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "uncontrollerErrorRsExample": {
                "value": {
                  "code": "UNCONTROLLER_ERROR",
                  "message": "Mensaje generico según la excepcion"
                }
              }
            }
          }
        }
      },
      "Method-Not-Allowed": {
        "description": "Metodo no permitido",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "MethodNotAllowedRsExample": {
                "value": {
                  "code": "METHOD_NOT_ALLOWED",
                  "message": "Servicio no autorizado."
                }
              }
            }
          }
        }
      },
      "Service-Unavailable": {
        "description": "Servicio no disponible  ",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../Models/Base-Error.v1.json"
            },
            "examples": {
              "ServicesUnavailableRsExample": {
                "value": {
                  "code": "SERVICE_UNAVAILABLE",
                  "message": "Servicio no disponible"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "idCobis": {
        "name": "idCobis",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "Numero de cliente Cobis"
      },
      "originCurrency": {
        "name": "originCurrency",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "example": "0"
        },
        "description": "Moneda origen"
      },
      "destinationCurrency": {
        "name": "destinationCurrency",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "example": "1"
        },
        "description": "Moneda destino"
      },
      "offer": {
        "name": "offer",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Identificador asociado a oferta comercial"
      },
      "stepOffer": {
        "name": "stepOffer",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Punto de proceso oferta comercial"
      },
      "datetime": {
        "name": "datetime",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Fecha de proceso en el que se encuentra procesando la oferta comercial"
      },
      "sequentialPreAut": {
        "name": "sequentialPreAut",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 424722004
        },
        "description": "Numero secuencial de la preautorización"
      },
      "rateType": {
        "name": "rateType",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "P",
            "S",
            "A"
          ],
          "example": "P"
        },
        "description": "Tipo de Tarifa para Compra de Divisa P=Preautorizada, S=Segmento o mostrador, A=Automática (Toma la más baja)"
      },
      "executionDateFrom": {
        "name": "executionDateFrom",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2023-01-18"
        },
        "description": "Fecha de filtrado desde de ejecución de la operación"
      },
      "lotNumber": {
        "name": "lotNumber",
        "in": "query",
        "schema": {
          "type": "integer",
          "example": 1254
        },
        "description": "Número de Lote"
      },
      "status": {
        "name": "status",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Estado de la operación de Pago. P=Pagado, A=Aprobado, B=Baja"
      },
      "companyCode": {
        "name": "companyCode",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 82
        },
        "description": "Número de empresa afiliada"
      },
      "executionDateTo": {
        "name": "executionDateTo",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2023-01-19"
        },
        "description": "Fecha de filtrado hasta de ejecución de la operación"
      },
      "paymentCode": {
        "name": "paymentCode",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "020225463124"
        },
        "description": "Código o clave del Pago"
      },
      "paymentBallot": {
        "name": "paymentBallot",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": true
        },
        "description": "Filtro para pagos con o sin boleta"
      },
      "OffSet": {
        "name": "offSet",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "minimum": 0
        },
        "description": "Número del registro desde el cual, a partir del siguiente se inicia el siguiente conjunto de resultados de la página"
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100,
          "example": 10,
          "default": 10
        },
        "description": "Cantidad de registros a retornar por pagina"
      }
    }
  },
  "tags": [
    {
      "name": "Consultas"
    },
    {
      "name": "Divisas"
    },
    {
      "name": "Transferencias Internacionales"
    },
    {
      "name": "Ventas"
    },
    {
      "name": "Efectivo Fácil"
    }
  ]
}